import{_ as C,$ as N,r as a,G as c,C as u,E as i}from"./index-BAHtZRt5.js";function y(t,e){return C(t,N)}class g extends Error{constructor(e){super(e||"Resource not found"),this.name="NotFoundError"}}const f=async t=>await(await fetch(t+"/contract-negotiation/processes")).json(),I=t=>i({queryKey:["CONTRACT_NEGOTIATION_PROCESSES"],queryFn:()=>f(t)}),M=()=>{const{api_gateway:t}=a.useContext(c),{data:e,isLoading:s,isError:n,error:r}=u(I(t));return{data:e,isLoading:s,isError:n,error:r}},O=async(t,e)=>await(await fetch(t+`/contract-negotiation/processes/${e}`)).json(),d=(t,e)=>i({queryKey:["CONTRACT_NEGOTIATION_PROCESSES_BY_ID",e],queryFn:()=>O(t,e),enabled:!!e}),m=t=>{const{api_gateway:e}=a.useContext(c),{data:s,isLoading:n,isError:r,error:o}=u(d(e,t));return{data:s,isLoading:n,isError:r,error:o}},E=async(t,e)=>await(await fetch(t+`/contract-negotiation/processes/${e}/messages`)).json(),_=(t,e)=>i({queryKey:["CONTRACT_NEGOTIATION_MESSAGES_BY_CNID",e],queryFn:()=>E(t,e),enabled:!!e}),q=t=>{const{api_gateway:e}=a.useContext(c),{data:s,isLoading:n,isError:r,error:o}=u(_(e,t));return{data:s,isLoading:n,isError:r,error:o}},T=async(t,e)=>await(await fetch(t+`/contract-negotiation/messages/${e}`)).json(),p=(t,e)=>i({queryKey:["CONTRACT_NEGOTIATION_MESSAGES_BY_ID",e],queryFn:()=>T(t,e),enabled:!!e}),D=t=>{const{api_gateway:e}=a.useContext(c),{data:s,isLoading:n,isError:r,error:o}=u(p(e,t));return{data:s,isLoading:n,isError:r,error:o}},A=async(t,e)=>{const s=await fetch(t+`/contract-negotiation/processes/${e}/offers/last`);if(s.status===404)throw new g(`Offer not found for message ID: ${e}`);return await s.json()},w=(t,e)=>i({queryKey:["CONTRACT_NEGOTIATION_LAST_OFFER_BY_MESSAGE_ID",e],queryFn:()=>A(t,e),enabled:!!e,retry:(s,n)=>n instanceof g?!1:s<3}),l=t=>{const{api_gateway:e}=a.useContext(c),{data:s,isLoading:n,isError:r,error:o}=y(w(e,t));return{data:s,isLoading:n,isError:r,error:o}},B=async(t,e)=>{const s=await fetch(t+`/contract-negotiation/messages/${e}/agreement`);if(s.status===404)throw new g(`Agreement not found for message ID: ${e}`);return await s.json()},G=(t,e)=>i({queryKey:["CONTRACT_NEGOTIATION_AGREEMENT_BY_MESSAGE_ID",e],queryFn:()=>B(t,e),enabled:!!e,retry:(s,n)=>n instanceof g?!1:s<3}),R=t=>{const{api_gateway:e}=a.useContext(c),{data:s,isLoading:n,isError:r,error:o}=y(G(e,t));return{data:s,isLoading:n,isError:r,error:o}};export{l as a,m as b,q as c,D as d,R as e,M as u};
