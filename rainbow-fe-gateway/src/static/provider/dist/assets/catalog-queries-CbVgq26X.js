import{r,G as c,i,q as y}from"./index-omH1oWRl.js";const g=async a=>await(await fetch(a+"/catalogs")).json(),u=a=>y({queryKey:["CATALOGS"],queryFn:()=>g(a)}),T=()=>{const{api_gateway:a}=r.useContext(c),{data:t,isLoading:s,isError:e,error:o}=i(u(a));return{data:t,isLoading:s,isError:e,error:o}},l=async(a,t)=>await(await fetch(a+`/catalogs/${t}`)).json(),D=(a,t)=>y({queryKey:["CATALOGS",t],queryFn:()=>l(a,t),enabled:!!t}),G=a=>{const{api_gateway:t}=r.useContext(c),{data:s,isLoading:e,isError:o,error:n}=i(D(t,a));return{data:s,isLoading:e,isError:o,error:n}},d=async(a,t)=>await(await fetch(a+`/catalogs/${t}/datasets`)).json(),C=(a,t)=>y({queryKey:["DATASETS_BY_CATALOG_ID",t],queryFn:()=>d(a,t),enabled:!!t}),O=a=>{const{api_gateway:t}=r.useContext(c),{data:s,isLoading:e,isError:o,error:n}=i(C(t,a));return{data:s,isLoading:e,isError:o,error:n}},B=async(a,t)=>await(await fetch(a+`/catalogs/${t}/data-services`)).json(),_=(a,t)=>y({queryKey:["DATA_SERVICES_BY_CATALOG_ID",t],queryFn:()=>B(a,t),enabled:!!t}),b=a=>{const{api_gateway:t}=r.useContext(c),{data:s,isLoading:e,isError:o,error:n}=i(_(t,a));return{data:s,isLoading:e,isError:o,error:n}},w=async(a,t)=>await(await fetch(a+`/datasets/${t}`)).json(),p=(a,t)=>y({queryKey:["DATASET_BY_ID",t],queryFn:()=>w(a,t),enabled:!!t}),L=a=>{const{api_gateway:t}=r.useContext(c),{data:s,isLoading:e,isError:o,error:n}=i(p(t,a));return{data:s,isLoading:e,isError:o,error:n}},A=async(a,t)=>await(await fetch(a+`/datasets/${t}/distributions`)).json(),I=(a,t)=>y({queryKey:["DISTRIBUTIONS_BY_DATASET_ID",t],queryFn:()=>A(a,t),enabled:!!t}),f=a=>{const{api_gateway:t}=r.useContext(c),{data:s,isLoading:e,isError:o,error:n}=i(I(t,a));return{data:s,isLoading:e,isError:o,error:n}},q=async(a,t)=>await(await fetch(a+`/data-services/${t}`)).json(),S=(a,t)=>y({queryKey:["DATA_SERVICE_BY_ID",t],queryFn:()=>q(a,t),enabled:!!t}),x=a=>{const{api_gateway:t}=r.useContext(c),{data:s,isLoading:e,isError:o,error:n}=i(S(t,a));return{data:s,isLoading:e,isError:o,error:n}};export{G as a,O as b,b as c,L as d,f as e,x as f,T as u};
