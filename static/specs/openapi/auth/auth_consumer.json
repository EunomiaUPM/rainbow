{
  "openapi": "3.1.0",
  "info": {
    "title": "Rainbow Authentication Consumer API",
    "description": "Rainbow Authentication Module - Rainbow Consumer API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:1000",
      "description": "Testing server"
    }
  ],
  "tags": [
    {
      "name": "Wallet",
      "description": "Endpoints related to Wallet management"
    },
    {
      "name": "Provider",
      "description": "Endpoints related to the Provider interaction"
    },
    {
      "name": "Authority",
      "description": "Endpoints related to the Authority to retrieve credentials"
    },
    {
      "name": "Callbacks",
      "description": "Endpoints to handle callbacks"
    }
  ],
  "paths": {
    "/api/v1/wallet/register": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "Register a new wallet",
        "description": "Creates a new wallet in the system.",
        "operationId": "wallet_register",
        "responses": {
          "201": {
            "description": "Wallet successfully registered."
          },
          "502": {
            "description": "The petition to the wallet went wrong"
          },
          "500": {
            "description": "Unexpected internal server error"
          }
        }
      }
    },
    "/api/v1/wallet/login": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "Login a wallet",
        "description": "Authenticates an existing wallet in the system.",
        "operationId": "wallet_login",
        "responses": {
          "200": {
            "description": "Wallet successfully logged in."
          },
          "502": {
            "description": "The petition to the wallet went wrong"
          },
          "500": {
            "description": "Unexpected internal server error"
          }
        }
      }
    },
    "/api/v1/wallet/logout": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "Logout a wallet",
        "description": "Logs out an authenticated wallet from the system.",
        "operationId": "wallet_logout",
        "responses": {
          "200": {
            "description": "Wallet successfully logged out."
          },
          "502": {
            "description": "The petition to the wallet went wrong"
          },
          "500": {
            "description": "Unexpected internal server error"
          }
        }
      }
    },
    "/api/v1/wallet/onboard": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "Onboard a wallet",
        "description": "Performs the onboarding process for a wallet in the system.",
        "operationId": "wallet_onboard",
        "responses": {
          "201": {
            "description": "Wallet successfully onboarded."
          },
          "502": {
            "description": "The petition to the wallet went wrong"
          },
          "500": {
            "description": "Unexpected internal server error"
          }
        }
      }
    },
    "/api/v1/wallet/partial-onboard": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "Partial onboard a wallet",
        "description": "Performs a partial onboarding process for a wallet in the system.",
        "operationId": "wallet_onboard",
        "responses": {
          "201": {
            "description": "Wallet successfully initialized."
          },
          "502": {
            "description": "The petition to the wallet went wrong"
          },
          "500": {
            "description": "Unexpected internal server error"
          }
        }
      }
    },
    "/api/v1/wallet/key": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "Register key in wallet",
        "description": "Register the key from env files in wallet.",
        "operationId": "register-key",
        "responses": {
          "201": {
            "description": "Key successfully registered."
          },
          "412": {
            "description": "An action should be done before"
          },
          "502": {
            "description": "The petition to create the key went wrong"
          },
          "500": {
            "description": "Unexpected internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Wallet"
        ],
        "summary": "Delete the key from wallet",
        "description": "Delete the key from wallet.",
        "operationId": "delete-key",
        "responses": {
          "201": {
            "description": "Key successfully deleted."
          },
          "412": {
            "description": "An action should be done before"
          },
          "502": {
            "description": "The petition to create the key went wrong"
          },
          "500": {
            "description": "Unexpected internal server error"
          }
        }
      }
    },
    "/api/v1/wallet/did": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "Register Did in wallet",
        "description": "Register Did based on key in wallet.",
        "operationId": "register-did",
        "responses": {
          "201": {
            "description": "Did successfully registered."
          },
          "412": {
            "description": "An action should be done before"
          },
          "502": {
            "description": "The petition to the create the Did went wrong"
          },
          "500": {
            "description": "Unexpected internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Wallet"
        ],
        "summary": "Delete Did from wallet",
        "description": "Delete Did from wallet.",
        "operationId": "delete-did",
        "responses": {
          "201": {
            "description": "Did successfully deleted."
          },
          "412": {
            "description": "An action should be done before"
          },
          "502": {
            "description": "The petition to the create the Did went wrong"
          },
          "500": {
            "description": "Unexpected internal server error"
          }
        }
      }
    },
    "/api/v1/did.json": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "Retrieve DID document",
        "description": "Gets the DID document of the wallet.",
        "operationId": "didweb",
        "responses": {
          "200": {
            "description": "DID document successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "verificationMethod": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "controller": {
                            "type": "string"
                          },
                          "publicKeyBase58": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "controller",
                          "publicKeyBase58"
                        ]
                      }
                    },
                    "authentication": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "@context",
                    "id",
                    "verificationMethod",
                    "authentication"
                  ]
                }
              }
            }
          },
          "412": {
            "description": "There is no wallet associated with the session or the Wallet does not have any dids."
          },
          "500": {
            "description": "Unexpected internal server error."
          }
        }
      }
    },
    "/api/v1/request/onboard/provider": {
      "post": {
        "tags": [
          "Provider"
        ],
        "summary": "Request provider onboarding",
        "description": "Sends a request to onboard a new provider into the system.",
        "operationId": "request_provider_onboard",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "actions": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "slug",
                  "url",
                  "actions"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request completed successfully, returns URI for authentication.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "400": {
            "description": "The request was malformed."
          },
          "502": {
            "description": "Request to provider failed or provider responded unexpectedly."
          },
          "500": {
            "description": "Database error or unexpected internal server error."
          }
        }
      }
    },
    "/api/v1/callback/{id}": {
      "get": {
        "tags": [
          "Callbacks"
        ],
        "summary": "A callback to complete processes",
        "description": "Handles the callback from a provider after onboarding. Saves the request in the system database.",
        "operationId": "get-callback",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Request identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hash",
            "in": "query",
            "required": true,
            "description": "Randomly generated hash for request validation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interact_ref",
            "in": "query",
            "required": true,
            "description": "Randomly generated interaction reference",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Mate information successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "participant_id": {
                      "type": "string"
                    },
                    "participant_slug": {
                      "type": "string"
                    },
                    "participant_type": {
                      "type": "string"
                    },
                    "base_url": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string",
                      "nullable": true
                    },
                    "saved_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "last_interaction": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "is_me": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "participant_id",
                    "participant_slug",
                    "participant_type",
                    "base_url",
                    "saved_at",
                    "last_interaction",
                    "is_me"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: hash or interact_ref is missing."
          },
          "404": {
            "description": "Request with given id not found."
          },
          "422": {
            "description": "Hash does not match the expected value."
          },
          "502": {
            "description": "Request to provider failed or provider returned unexpected response."
          },
          "500": {
            "description": "Database error or unexpected internal server error."
          }
        }
      },
      "post": {
        "tags": [
          "Callbacks"
        ],
        "summary": "A callback to complete processes",
        "description": "Handles the callback from an authority after onboarding. Saves the request in the system database.",
        "operationId": "post-callback",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "interact_ref": {
                    "type": "string"
                  },
                  "hash": {
                    "type": "string"
                  }
                },
                "required": [
                  "interact_ref",
                  "hash"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request completed successfully, returns URI for authentication.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "400": {
            "description": "The request was malformed."
          },
          "502": {
            "description": "Request to provider failed or provider responded unexpectedly."
          },
          "500": {
            "description": "Database error or unexpected internal server error."
          }
        }
      }
    },
    "/api/v1/authority/beg": {
      "post": {
        "tags": [
          "Authority"
        ],
        "summary": "Begin a credential request to authority",
        "description": "Starts a credential request process with the authority by using a certificate.",
        "operationId": "beg-credential-cert",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Identifier of the request"
                  },
                  "slug": {
                    "type": "string",
                    "description": "Slug of the authority"
                  },
                  "url": {
                    "type": "string",
                    "description": "URL of the authority endpoint"
                  },
                  "vc_type": {
                    "type": "string",
                    "description": "The type of credential you are requesting"
                  }
                },
                "required": [
                  "id",
                  "slug",
                  "url",
                  "vc_type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK. Credential request started successfully."
          },
          "502": {
            "description": "Bad Gateway. The request to the authority failed."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/authority/beg/oidc": {
      "post": {
        "tags": [
          "Authority"
        ],
        "summary": "Begin a credential request to authority",
        "description": "Starts a credential request process with the authority by using a certificate.",
        "operationId": "beg-credential-cert",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Identifier of the request"
                  },
                  "slug": {
                    "type": "string",
                    "description": "Slug of the authority"
                  },
                  "url": {
                    "type": "string",
                    "description": "URL of the authority endpoint"
                  },
                  "vc_type": {
                    "type": "string",
                    "description": "The type of credential you are requesting"
                  }
                },
                "required": [
                  "id",
                  "slug",
                  "url",
                  "vc_type"
                ]
              }
            }
          }
        },
        "200": {
          "description": "Request completed successfully, returns URI for authentication.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        },
        "400": {
          "description": "The request was malformed."
        },
        "502": {
          "description": "Request to provider failed or provider responded unexpectedly."
        },
        "500": {
          "description": "Database error or unexpected internal server error."
        }
      }
    },
    "/api/v1/authority/request/all": {
      "get": {
        "tags": [
          "Authority"
        ],
        "summary": "Get all requests sent to the Authority",
        "description": "Retrieve all authority requests from the database.",
        "operationId": "get-all-authority",
        "responses": {
          "200": {
            "description": "List of authority requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthorityRequest"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/authority/request/{id}": {
      "get": {
        "tags": [
          "Authority"
        ],
        "summary": "Get a single request sent to an Authority",
        "description": "Retrieve a specific authority request by its ID.",
        "operationId": "get-one-authority",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the authority request"
          }
        ],
        "responses": {
          "200": {
            "description": "Authority request found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorityRequest"
                }
              }
            }
          },
          "404": {
            "description": "Authority request not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/mates": {
      "get": {
        "summary": "List all mates",
        "description": "Retrieves a list of all mates associated with the authenticated user.",
        "operationId": "getAllMates",
        "responses": {
          "200": {
            "description": "List of mates successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "participant_id": {
                        "type": "string"
                      },
                      "participant_slug": {
                        "type": "string"
                      },
                      "participant_type": {
                        "type": "string"
                      },
                      "base_url": {
                        "type": "string",
                        "nullable": true
                      },
                      "token": {
                        "type": "string",
                        "nullable": true
                      },
                      "saved_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "last_interaction": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "is_me": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "participant_id",
                      "participant_slug",
                      "participant_type",
                      "saved_at",
                      "last_interaction",
                      "is_me"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request: malformed request."
          },
          "404": {
            "description": "No mates found for the authenticated user."
          },
          "500": {
            "description": "Unexpected internal server error or database error."
          }
        }
      }
    },
    "/api/v1/mates/batch": {
      "post": {
        "summary": "List all mates in batch",
        "description": "Retrieves a batch list of all mates associated with the authenticated user.",
        "operationId": "getBatchMates",
        "requestBody": {
          "description": "Batch request parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchRequests"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of mates successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "participant_id": {
                        "type": "string"
                      },
                      "participant_slug": {
                        "type": "string"
                      },
                      "participant_type": {
                        "type": "string"
                      },
                      "base_url": {
                        "type": "string",
                        "nullable": true
                      },
                      "token": {
                        "type": "string",
                        "nullable": true
                      },
                      "saved_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "last_interaction": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "is_me": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "participant_id",
                      "participant_slug",
                      "participant_type",
                      "saved_at",
                      "last_interaction",
                      "is_me"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request: malformed request."
          },
          "404": {
            "description": "No mates found for the authenticated user."
          },
          "500": {
            "description": "Unexpected internal server error or database error."
          }
        }
      }
    },
    "/api/v1/mates/me": {
      "get": {
        "summary": "Get current user information",
        "description": "Retrieves the mate information for the authenticated user.",
        "operationId": "getMateMe",
        "responses": {
          "200": {
            "description": "Mate information successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "participant_id": {
                      "type": "string"
                    },
                    "participant_slug": {
                      "type": "string"
                    },
                    "participant_type": {
                      "type": "string"
                    },
                    "base_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "token": {
                      "type": "string",
                      "nullable": true
                    },
                    "saved_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "last_interaction": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "is_me": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "participant_id",
                    "participant_slug",
                    "participant_type",
                    "saved_at",
                    "last_interaction",
                    "is_me"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: malformed request."
          },
          "404": {
            "description": "Mate not found for the authenticated user."
          },
          "500": {
            "description": "Unexpected internal server error or database error."
          }
        }
      }
    },
    "/api/v1/mates/:did": {
      "get": {
        "summary": "Get mate by DID",
        "description": "Retrieves the mate information for a specific DID.",
        "operationId": "getMateByDID",
        "parameters": [
          {
            "name": "did",
            "in": "path",
            "required": true,
            "description": "Decentralized Identifier (DID) of the mate",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mate information successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "participant_id": {
                      "type": "string"
                    },
                    "participant_slug": {
                      "type": "string"
                    },
                    "participant_type": {
                      "type": "string"
                    },
                    "base_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "token": {
                      "type": "string",
                      "nullable": true
                    },
                    "saved_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "last_interaction": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "is_me": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "participant_id",
                    "participant_slug",
                    "participant_type",
                    "saved_at",
                    "last_interaction",
                    "is_me"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: malformed request."
          },
          "404": {
            "description": "Mate not found for the given DID."
          },
          "500": {
            "description": "Unexpected internal server error or database error."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BatchRequests": {
        "type": "object",
        "description": "Container for batch requests.",
        "properties": {
          "ids": {
            "type": "array",
            "description": "List of individual requests to be processed in batch.",
            "items": {
              "type": "string",
              "pattern": "^urn:uuid:[0-9a-fA-F-]{36}$",
              "examples": [
                "urn:uuid:123e4567-e89b-12d3-a456-426614174000",
                "urn:uuid:765e4321-e89b-12d3-a456-426614174001"
              ]
            }
          }
        },
        "required": [
          "requests"
        ]
      }
    }
  }
}