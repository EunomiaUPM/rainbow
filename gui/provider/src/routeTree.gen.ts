/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TransferProcessRouteImport } from './routes/transfer-process/route'
import { Route as SubscriptionsRouteImport } from './routes/subscriptions/route'
import { Route as ParticipantsRouteImport } from './routes/participants/route'
import { Route as ContractNegotiationRouteImport } from './routes/contract-negotiation/route'
import { Route as CatalogRouteImport } from './routes/catalog/route'
import { Route as AgreementsRouteImport } from './routes/agreements/route'
import { Route as IndexImport } from './routes/index'
import { Route as TransferProcessIndexImport } from './routes/transfer-process/index'
import { Route as SubscriptionsIndexImport } from './routes/subscriptions/index'
import { Route as ParticipantsIndexImport } from './routes/participants/index'
import { Route as ContractNegotiationIndexImport } from './routes/contract-negotiation/index'
import { Route as CatalogIndexImport } from './routes/catalog/index'
import { Route as AgreementsIndexImport } from './routes/agreements/index'
import { Route as AgreementsAgreementIdImport } from './routes/agreements/$agreementId'
import { Route as TransferProcessTransferProcessIdRouteImport } from './routes/transfer-process/$transferProcessId/route'
import { Route as ParticipantsParticipantIdRouteImport } from './routes/participants/$participantId/route'
import { Route as ContractNegotiationCnProcessRouteImport } from './routes/contract-negotiation/$cnProcess/route'
import { Route as CatalogCatalogIdRouteImport } from './routes/catalog/$catalogId/route'
import { Route as TransferProcessTransferProcessIdIndexImport } from './routes/transfer-process/$transferProcessId/index'
import { Route as ParticipantsParticipantIdIndexImport } from './routes/participants/$participantId/index'
import { Route as ContractNegotiationCnProcessIndexImport } from './routes/contract-negotiation/$cnProcess/index'
import { Route as CatalogCatalogIdIndexImport } from './routes/catalog/$catalogId/index'
import { Route as TransferProcessTransferProcessIdTransferMessageTransferMessageIdImport } from './routes/transfer-process/$transferProcessId/transfer-message.$transferMessageId'
import { Route as ContractNegotiationCnProcessMessageMessageIdImport } from './routes/contract-negotiation/$cnProcess/message.$messageId'
import { Route as CatalogCatalogIdDatasetDatasetIdImport } from './routes/catalog/$catalogId/dataset.$datasetId'
import { Route as CatalogCatalogIdDataServiceDataServiceIdImport } from './routes/catalog/$catalogId/data-service.$dataServiceId'

// Create/Update Routes

const TransferProcessRouteRoute = TransferProcessRouteImport.update({
  id: '/transfer-process',
  path: '/transfer-process',
  getParentRoute: () => rootRoute,
} as any)

const SubscriptionsRouteRoute = SubscriptionsRouteImport.update({
  id: '/subscriptions',
  path: '/subscriptions',
  getParentRoute: () => rootRoute,
} as any)

const ParticipantsRouteRoute = ParticipantsRouteImport.update({
  id: '/participants',
  path: '/participants',
  getParentRoute: () => rootRoute,
} as any)

const ContractNegotiationRouteRoute = ContractNegotiationRouteImport.update({
  id: '/contract-negotiation',
  path: '/contract-negotiation',
  getParentRoute: () => rootRoute,
} as any)

const CatalogRouteRoute = CatalogRouteImport.update({
  id: '/catalog',
  path: '/catalog',
  getParentRoute: () => rootRoute,
} as any)

const AgreementsRouteRoute = AgreementsRouteImport.update({
  id: '/agreements',
  path: '/agreements',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TransferProcessIndexRoute = TransferProcessIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TransferProcessRouteRoute,
} as any)

const SubscriptionsIndexRoute = SubscriptionsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SubscriptionsRouteRoute,
} as any)

const ParticipantsIndexRoute = ParticipantsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ParticipantsRouteRoute,
} as any)

const ContractNegotiationIndexRoute = ContractNegotiationIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ContractNegotiationRouteRoute,
} as any)

const CatalogIndexRoute = CatalogIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => CatalogRouteRoute,
} as any)

const AgreementsIndexRoute = AgreementsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AgreementsRouteRoute,
} as any)

const AgreementsAgreementIdRoute = AgreementsAgreementIdImport.update({
  id: '/$agreementId',
  path: '/$agreementId',
  getParentRoute: () => AgreementsRouteRoute,
} as any)

const TransferProcessTransferProcessIdRouteRoute =
  TransferProcessTransferProcessIdRouteImport.update({
    id: '/$transferProcessId',
    path: '/$transferProcessId',
    getParentRoute: () => TransferProcessRouteRoute,
  } as any)

const ParticipantsParticipantIdRouteRoute =
  ParticipantsParticipantIdRouteImport.update({
    id: '/$participantId',
    path: '/$participantId',
    getParentRoute: () => ParticipantsRouteRoute,
  } as any)

const ContractNegotiationCnProcessRouteRoute =
  ContractNegotiationCnProcessRouteImport.update({
    id: '/$cnProcess',
    path: '/$cnProcess',
    getParentRoute: () => ContractNegotiationRouteRoute,
  } as any)

const CatalogCatalogIdRouteRoute = CatalogCatalogIdRouteImport.update({
  id: '/$catalogId',
  path: '/$catalogId',
  getParentRoute: () => CatalogRouteRoute,
} as any)

const TransferProcessTransferProcessIdIndexRoute =
  TransferProcessTransferProcessIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => TransferProcessTransferProcessIdRouteRoute,
  } as any)

const ParticipantsParticipantIdIndexRoute =
  ParticipantsParticipantIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ParticipantsParticipantIdRouteRoute,
  } as any)

const ContractNegotiationCnProcessIndexRoute =
  ContractNegotiationCnProcessIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ContractNegotiationCnProcessRouteRoute,
  } as any)

const CatalogCatalogIdIndexRoute = CatalogCatalogIdIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => CatalogCatalogIdRouteRoute,
} as any)

const TransferProcessTransferProcessIdTransferMessageTransferMessageIdRoute =
  TransferProcessTransferProcessIdTransferMessageTransferMessageIdImport.update(
    {
      id: '/transfer-message/$transferMessageId',
      path: '/transfer-message/$transferMessageId',
      getParentRoute: () => TransferProcessTransferProcessIdRouteRoute,
    } as any,
  )

const ContractNegotiationCnProcessMessageMessageIdRoute =
  ContractNegotiationCnProcessMessageMessageIdImport.update({
    id: '/message/$messageId',
    path: '/message/$messageId',
    getParentRoute: () => ContractNegotiationCnProcessRouteRoute,
  } as any)

const CatalogCatalogIdDatasetDatasetIdRoute =
  CatalogCatalogIdDatasetDatasetIdImport.update({
    id: '/dataset/$datasetId',
    path: '/dataset/$datasetId',
    getParentRoute: () => CatalogCatalogIdRouteRoute,
  } as any)

const CatalogCatalogIdDataServiceDataServiceIdRoute =
  CatalogCatalogIdDataServiceDataServiceIdImport.update({
    id: '/data-service/$dataServiceId',
    path: '/data-service/$dataServiceId',
    getParentRoute: () => CatalogCatalogIdRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/agreements': {
      id: '/agreements'
      path: '/agreements'
      fullPath: '/agreements'
      preLoaderRoute: typeof AgreementsRouteImport
      parentRoute: typeof rootRoute
    }
    '/catalog': {
      id: '/catalog'
      path: '/catalog'
      fullPath: '/catalog'
      preLoaderRoute: typeof CatalogRouteImport
      parentRoute: typeof rootRoute
    }
    '/contract-negotiation': {
      id: '/contract-negotiation'
      path: '/contract-negotiation'
      fullPath: '/contract-negotiation'
      preLoaderRoute: typeof ContractNegotiationRouteImport
      parentRoute: typeof rootRoute
    }
    '/participants': {
      id: '/participants'
      path: '/participants'
      fullPath: '/participants'
      preLoaderRoute: typeof ParticipantsRouteImport
      parentRoute: typeof rootRoute
    }
    '/subscriptions': {
      id: '/subscriptions'
      path: '/subscriptions'
      fullPath: '/subscriptions'
      preLoaderRoute: typeof SubscriptionsRouteImport
      parentRoute: typeof rootRoute
    }
    '/transfer-process': {
      id: '/transfer-process'
      path: '/transfer-process'
      fullPath: '/transfer-process'
      preLoaderRoute: typeof TransferProcessRouteImport
      parentRoute: typeof rootRoute
    }
    '/catalog/$catalogId': {
      id: '/catalog/$catalogId'
      path: '/$catalogId'
      fullPath: '/catalog/$catalogId'
      preLoaderRoute: typeof CatalogCatalogIdRouteImport
      parentRoute: typeof CatalogRouteImport
    }
    '/contract-negotiation/$cnProcess': {
      id: '/contract-negotiation/$cnProcess'
      path: '/$cnProcess'
      fullPath: '/contract-negotiation/$cnProcess'
      preLoaderRoute: typeof ContractNegotiationCnProcessRouteImport
      parentRoute: typeof ContractNegotiationRouteImport
    }
    '/participants/$participantId': {
      id: '/participants/$participantId'
      path: '/$participantId'
      fullPath: '/participants/$participantId'
      preLoaderRoute: typeof ParticipantsParticipantIdRouteImport
      parentRoute: typeof ParticipantsRouteImport
    }
    '/transfer-process/$transferProcessId': {
      id: '/transfer-process/$transferProcessId'
      path: '/$transferProcessId'
      fullPath: '/transfer-process/$transferProcessId'
      preLoaderRoute: typeof TransferProcessTransferProcessIdRouteImport
      parentRoute: typeof TransferProcessRouteImport
    }
    '/agreements/$agreementId': {
      id: '/agreements/$agreementId'
      path: '/$agreementId'
      fullPath: '/agreements/$agreementId'
      preLoaderRoute: typeof AgreementsAgreementIdImport
      parentRoute: typeof AgreementsRouteImport
    }
    '/agreements/': {
      id: '/agreements/'
      path: '/'
      fullPath: '/agreements/'
      preLoaderRoute: typeof AgreementsIndexImport
      parentRoute: typeof AgreementsRouteImport
    }
    '/catalog/': {
      id: '/catalog/'
      path: '/'
      fullPath: '/catalog/'
      preLoaderRoute: typeof CatalogIndexImport
      parentRoute: typeof CatalogRouteImport
    }
    '/contract-negotiation/': {
      id: '/contract-negotiation/'
      path: '/'
      fullPath: '/contract-negotiation/'
      preLoaderRoute: typeof ContractNegotiationIndexImport
      parentRoute: typeof ContractNegotiationRouteImport
    }
    '/participants/': {
      id: '/participants/'
      path: '/'
      fullPath: '/participants/'
      preLoaderRoute: typeof ParticipantsIndexImport
      parentRoute: typeof ParticipantsRouteImport
    }
    '/subscriptions/': {
      id: '/subscriptions/'
      path: '/'
      fullPath: '/subscriptions/'
      preLoaderRoute: typeof SubscriptionsIndexImport
      parentRoute: typeof SubscriptionsRouteImport
    }
    '/transfer-process/': {
      id: '/transfer-process/'
      path: '/'
      fullPath: '/transfer-process/'
      preLoaderRoute: typeof TransferProcessIndexImport
      parentRoute: typeof TransferProcessRouteImport
    }
    '/catalog/$catalogId/': {
      id: '/catalog/$catalogId/'
      path: '/'
      fullPath: '/catalog/$catalogId/'
      preLoaderRoute: typeof CatalogCatalogIdIndexImport
      parentRoute: typeof CatalogCatalogIdRouteImport
    }
    '/contract-negotiation/$cnProcess/': {
      id: '/contract-negotiation/$cnProcess/'
      path: '/'
      fullPath: '/contract-negotiation/$cnProcess/'
      preLoaderRoute: typeof ContractNegotiationCnProcessIndexImport
      parentRoute: typeof ContractNegotiationCnProcessRouteImport
    }
    '/participants/$participantId/': {
      id: '/participants/$participantId/'
      path: '/'
      fullPath: '/participants/$participantId/'
      preLoaderRoute: typeof ParticipantsParticipantIdIndexImport
      parentRoute: typeof ParticipantsParticipantIdRouteImport
    }
    '/transfer-process/$transferProcessId/': {
      id: '/transfer-process/$transferProcessId/'
      path: '/'
      fullPath: '/transfer-process/$transferProcessId/'
      preLoaderRoute: typeof TransferProcessTransferProcessIdIndexImport
      parentRoute: typeof TransferProcessTransferProcessIdRouteImport
    }
    '/catalog/$catalogId/data-service/$dataServiceId': {
      id: '/catalog/$catalogId/data-service/$dataServiceId'
      path: '/data-service/$dataServiceId'
      fullPath: '/catalog/$catalogId/data-service/$dataServiceId'
      preLoaderRoute: typeof CatalogCatalogIdDataServiceDataServiceIdImport
      parentRoute: typeof CatalogCatalogIdRouteImport
    }
    '/catalog/$catalogId/dataset/$datasetId': {
      id: '/catalog/$catalogId/dataset/$datasetId'
      path: '/dataset/$datasetId'
      fullPath: '/catalog/$catalogId/dataset/$datasetId'
      preLoaderRoute: typeof CatalogCatalogIdDatasetDatasetIdImport
      parentRoute: typeof CatalogCatalogIdRouteImport
    }
    '/contract-negotiation/$cnProcess/message/$messageId': {
      id: '/contract-negotiation/$cnProcess/message/$messageId'
      path: '/message/$messageId'
      fullPath: '/contract-negotiation/$cnProcess/message/$messageId'
      preLoaderRoute: typeof ContractNegotiationCnProcessMessageMessageIdImport
      parentRoute: typeof ContractNegotiationCnProcessRouteImport
    }
    '/transfer-process/$transferProcessId/transfer-message/$transferMessageId': {
      id: '/transfer-process/$transferProcessId/transfer-message/$transferMessageId'
      path: '/transfer-message/$transferMessageId'
      fullPath: '/transfer-process/$transferProcessId/transfer-message/$transferMessageId'
      preLoaderRoute: typeof TransferProcessTransferProcessIdTransferMessageTransferMessageIdImport
      parentRoute: typeof TransferProcessTransferProcessIdRouteImport
    }
  }
}

// Create and export the route tree

interface AgreementsRouteRouteChildren {
  AgreementsAgreementIdRoute: typeof AgreementsAgreementIdRoute
  AgreementsIndexRoute: typeof AgreementsIndexRoute
}

const AgreementsRouteRouteChildren: AgreementsRouteRouteChildren = {
  AgreementsAgreementIdRoute: AgreementsAgreementIdRoute,
  AgreementsIndexRoute: AgreementsIndexRoute,
}

const AgreementsRouteRouteWithChildren = AgreementsRouteRoute._addFileChildren(
  AgreementsRouteRouteChildren,
)

interface CatalogCatalogIdRouteRouteChildren {
  CatalogCatalogIdIndexRoute: typeof CatalogCatalogIdIndexRoute
  CatalogCatalogIdDataServiceDataServiceIdRoute: typeof CatalogCatalogIdDataServiceDataServiceIdRoute
  CatalogCatalogIdDatasetDatasetIdRoute: typeof CatalogCatalogIdDatasetDatasetIdRoute
}

const CatalogCatalogIdRouteRouteChildren: CatalogCatalogIdRouteRouteChildren = {
  CatalogCatalogIdIndexRoute: CatalogCatalogIdIndexRoute,
  CatalogCatalogIdDataServiceDataServiceIdRoute:
    CatalogCatalogIdDataServiceDataServiceIdRoute,
  CatalogCatalogIdDatasetDatasetIdRoute: CatalogCatalogIdDatasetDatasetIdRoute,
}

const CatalogCatalogIdRouteRouteWithChildren =
  CatalogCatalogIdRouteRoute._addFileChildren(
    CatalogCatalogIdRouteRouteChildren,
  )

interface CatalogRouteRouteChildren {
  CatalogCatalogIdRouteRoute: typeof CatalogCatalogIdRouteRouteWithChildren
  CatalogIndexRoute: typeof CatalogIndexRoute
}

const CatalogRouteRouteChildren: CatalogRouteRouteChildren = {
  CatalogCatalogIdRouteRoute: CatalogCatalogIdRouteRouteWithChildren,
  CatalogIndexRoute: CatalogIndexRoute,
}

const CatalogRouteRouteWithChildren = CatalogRouteRoute._addFileChildren(
  CatalogRouteRouteChildren,
)

interface ContractNegotiationCnProcessRouteRouteChildren {
  ContractNegotiationCnProcessIndexRoute: typeof ContractNegotiationCnProcessIndexRoute
  ContractNegotiationCnProcessMessageMessageIdRoute: typeof ContractNegotiationCnProcessMessageMessageIdRoute
}

const ContractNegotiationCnProcessRouteRouteChildren: ContractNegotiationCnProcessRouteRouteChildren =
  {
    ContractNegotiationCnProcessIndexRoute:
      ContractNegotiationCnProcessIndexRoute,
    ContractNegotiationCnProcessMessageMessageIdRoute:
      ContractNegotiationCnProcessMessageMessageIdRoute,
  }

const ContractNegotiationCnProcessRouteRouteWithChildren =
  ContractNegotiationCnProcessRouteRoute._addFileChildren(
    ContractNegotiationCnProcessRouteRouteChildren,
  )

interface ContractNegotiationRouteRouteChildren {
  ContractNegotiationCnProcessRouteRoute: typeof ContractNegotiationCnProcessRouteRouteWithChildren
  ContractNegotiationIndexRoute: typeof ContractNegotiationIndexRoute
}

const ContractNegotiationRouteRouteChildren: ContractNegotiationRouteRouteChildren =
  {
    ContractNegotiationCnProcessRouteRoute:
      ContractNegotiationCnProcessRouteRouteWithChildren,
    ContractNegotiationIndexRoute: ContractNegotiationIndexRoute,
  }

const ContractNegotiationRouteRouteWithChildren =
  ContractNegotiationRouteRoute._addFileChildren(
    ContractNegotiationRouteRouteChildren,
  )

interface ParticipantsParticipantIdRouteRouteChildren {
  ParticipantsParticipantIdIndexRoute: typeof ParticipantsParticipantIdIndexRoute
}

const ParticipantsParticipantIdRouteRouteChildren: ParticipantsParticipantIdRouteRouteChildren =
  {
    ParticipantsParticipantIdIndexRoute: ParticipantsParticipantIdIndexRoute,
  }

const ParticipantsParticipantIdRouteRouteWithChildren =
  ParticipantsParticipantIdRouteRoute._addFileChildren(
    ParticipantsParticipantIdRouteRouteChildren,
  )

interface ParticipantsRouteRouteChildren {
  ParticipantsParticipantIdRouteRoute: typeof ParticipantsParticipantIdRouteRouteWithChildren
  ParticipantsIndexRoute: typeof ParticipantsIndexRoute
}

const ParticipantsRouteRouteChildren: ParticipantsRouteRouteChildren = {
  ParticipantsParticipantIdRouteRoute:
    ParticipantsParticipantIdRouteRouteWithChildren,
  ParticipantsIndexRoute: ParticipantsIndexRoute,
}

const ParticipantsRouteRouteWithChildren =
  ParticipantsRouteRoute._addFileChildren(ParticipantsRouteRouteChildren)

interface SubscriptionsRouteRouteChildren {
  SubscriptionsIndexRoute: typeof SubscriptionsIndexRoute
}

const SubscriptionsRouteRouteChildren: SubscriptionsRouteRouteChildren = {
  SubscriptionsIndexRoute: SubscriptionsIndexRoute,
}

const SubscriptionsRouteRouteWithChildren =
  SubscriptionsRouteRoute._addFileChildren(SubscriptionsRouteRouteChildren)

interface TransferProcessTransferProcessIdRouteRouteChildren {
  TransferProcessTransferProcessIdIndexRoute: typeof TransferProcessTransferProcessIdIndexRoute
  TransferProcessTransferProcessIdTransferMessageTransferMessageIdRoute: typeof TransferProcessTransferProcessIdTransferMessageTransferMessageIdRoute
}

const TransferProcessTransferProcessIdRouteRouteChildren: TransferProcessTransferProcessIdRouteRouteChildren =
  {
    TransferProcessTransferProcessIdIndexRoute:
      TransferProcessTransferProcessIdIndexRoute,
    TransferProcessTransferProcessIdTransferMessageTransferMessageIdRoute:
      TransferProcessTransferProcessIdTransferMessageTransferMessageIdRoute,
  }

const TransferProcessTransferProcessIdRouteRouteWithChildren =
  TransferProcessTransferProcessIdRouteRoute._addFileChildren(
    TransferProcessTransferProcessIdRouteRouteChildren,
  )

interface TransferProcessRouteRouteChildren {
  TransferProcessTransferProcessIdRouteRoute: typeof TransferProcessTransferProcessIdRouteRouteWithChildren
  TransferProcessIndexRoute: typeof TransferProcessIndexRoute
}

const TransferProcessRouteRouteChildren: TransferProcessRouteRouteChildren = {
  TransferProcessTransferProcessIdRouteRoute:
    TransferProcessTransferProcessIdRouteRouteWithChildren,
  TransferProcessIndexRoute: TransferProcessIndexRoute,
}

const TransferProcessRouteRouteWithChildren =
  TransferProcessRouteRoute._addFileChildren(TransferProcessRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/agreements': typeof AgreementsRouteRouteWithChildren
  '/catalog': typeof CatalogRouteRouteWithChildren
  '/contract-negotiation': typeof ContractNegotiationRouteRouteWithChildren
  '/participants': typeof ParticipantsRouteRouteWithChildren
  '/subscriptions': typeof SubscriptionsRouteRouteWithChildren
  '/transfer-process': typeof TransferProcessRouteRouteWithChildren
  '/catalog/$catalogId': typeof CatalogCatalogIdRouteRouteWithChildren
  '/contract-negotiation/$cnProcess': typeof ContractNegotiationCnProcessRouteRouteWithChildren
  '/participants/$participantId': typeof ParticipantsParticipantIdRouteRouteWithChildren
  '/transfer-process/$transferProcessId': typeof TransferProcessTransferProcessIdRouteRouteWithChildren
  '/agreements/$agreementId': typeof AgreementsAgreementIdRoute
  '/agreements/': typeof AgreementsIndexRoute
  '/catalog/': typeof CatalogIndexRoute
  '/contract-negotiation/': typeof ContractNegotiationIndexRoute
  '/participants/': typeof ParticipantsIndexRoute
  '/subscriptions/': typeof SubscriptionsIndexRoute
  '/transfer-process/': typeof TransferProcessIndexRoute
  '/catalog/$catalogId/': typeof CatalogCatalogIdIndexRoute
  '/contract-negotiation/$cnProcess/': typeof ContractNegotiationCnProcessIndexRoute
  '/participants/$participantId/': typeof ParticipantsParticipantIdIndexRoute
  '/transfer-process/$transferProcessId/': typeof TransferProcessTransferProcessIdIndexRoute
  '/catalog/$catalogId/data-service/$dataServiceId': typeof CatalogCatalogIdDataServiceDataServiceIdRoute
  '/catalog/$catalogId/dataset/$datasetId': typeof CatalogCatalogIdDatasetDatasetIdRoute
  '/contract-negotiation/$cnProcess/message/$messageId': typeof ContractNegotiationCnProcessMessageMessageIdRoute
  '/transfer-process/$transferProcessId/transfer-message/$transferMessageId': typeof TransferProcessTransferProcessIdTransferMessageTransferMessageIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/agreements/$agreementId': typeof AgreementsAgreementIdRoute
  '/agreements': typeof AgreementsIndexRoute
  '/catalog': typeof CatalogIndexRoute
  '/contract-negotiation': typeof ContractNegotiationIndexRoute
  '/participants': typeof ParticipantsIndexRoute
  '/subscriptions': typeof SubscriptionsIndexRoute
  '/transfer-process': typeof TransferProcessIndexRoute
  '/catalog/$catalogId': typeof CatalogCatalogIdIndexRoute
  '/contract-negotiation/$cnProcess': typeof ContractNegotiationCnProcessIndexRoute
  '/participants/$participantId': typeof ParticipantsParticipantIdIndexRoute
  '/transfer-process/$transferProcessId': typeof TransferProcessTransferProcessIdIndexRoute
  '/catalog/$catalogId/data-service/$dataServiceId': typeof CatalogCatalogIdDataServiceDataServiceIdRoute
  '/catalog/$catalogId/dataset/$datasetId': typeof CatalogCatalogIdDatasetDatasetIdRoute
  '/contract-negotiation/$cnProcess/message/$messageId': typeof ContractNegotiationCnProcessMessageMessageIdRoute
  '/transfer-process/$transferProcessId/transfer-message/$transferMessageId': typeof TransferProcessTransferProcessIdTransferMessageTransferMessageIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/agreements': typeof AgreementsRouteRouteWithChildren
  '/catalog': typeof CatalogRouteRouteWithChildren
  '/contract-negotiation': typeof ContractNegotiationRouteRouteWithChildren
  '/participants': typeof ParticipantsRouteRouteWithChildren
  '/subscriptions': typeof SubscriptionsRouteRouteWithChildren
  '/transfer-process': typeof TransferProcessRouteRouteWithChildren
  '/catalog/$catalogId': typeof CatalogCatalogIdRouteRouteWithChildren
  '/contract-negotiation/$cnProcess': typeof ContractNegotiationCnProcessRouteRouteWithChildren
  '/participants/$participantId': typeof ParticipantsParticipantIdRouteRouteWithChildren
  '/transfer-process/$transferProcessId': typeof TransferProcessTransferProcessIdRouteRouteWithChildren
  '/agreements/$agreementId': typeof AgreementsAgreementIdRoute
  '/agreements/': typeof AgreementsIndexRoute
  '/catalog/': typeof CatalogIndexRoute
  '/contract-negotiation/': typeof ContractNegotiationIndexRoute
  '/participants/': typeof ParticipantsIndexRoute
  '/subscriptions/': typeof SubscriptionsIndexRoute
  '/transfer-process/': typeof TransferProcessIndexRoute
  '/catalog/$catalogId/': typeof CatalogCatalogIdIndexRoute
  '/contract-negotiation/$cnProcess/': typeof ContractNegotiationCnProcessIndexRoute
  '/participants/$participantId/': typeof ParticipantsParticipantIdIndexRoute
  '/transfer-process/$transferProcessId/': typeof TransferProcessTransferProcessIdIndexRoute
  '/catalog/$catalogId/data-service/$dataServiceId': typeof CatalogCatalogIdDataServiceDataServiceIdRoute
  '/catalog/$catalogId/dataset/$datasetId': typeof CatalogCatalogIdDatasetDatasetIdRoute
  '/contract-negotiation/$cnProcess/message/$messageId': typeof ContractNegotiationCnProcessMessageMessageIdRoute
  '/transfer-process/$transferProcessId/transfer-message/$transferMessageId': typeof TransferProcessTransferProcessIdTransferMessageTransferMessageIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/agreements'
    | '/catalog'
    | '/contract-negotiation'
    | '/participants'
    | '/subscriptions'
    | '/transfer-process'
    | '/catalog/$catalogId'
    | '/contract-negotiation/$cnProcess'
    | '/participants/$participantId'
    | '/transfer-process/$transferProcessId'
    | '/agreements/$agreementId'
    | '/agreements/'
    | '/catalog/'
    | '/contract-negotiation/'
    | '/participants/'
    | '/subscriptions/'
    | '/transfer-process/'
    | '/catalog/$catalogId/'
    | '/contract-negotiation/$cnProcess/'
    | '/participants/$participantId/'
    | '/transfer-process/$transferProcessId/'
    | '/catalog/$catalogId/data-service/$dataServiceId'
    | '/catalog/$catalogId/dataset/$datasetId'
    | '/contract-negotiation/$cnProcess/message/$messageId'
    | '/transfer-process/$transferProcessId/transfer-message/$transferMessageId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/agreements/$agreementId'
    | '/agreements'
    | '/catalog'
    | '/contract-negotiation'
    | '/participants'
    | '/subscriptions'
    | '/transfer-process'
    | '/catalog/$catalogId'
    | '/contract-negotiation/$cnProcess'
    | '/participants/$participantId'
    | '/transfer-process/$transferProcessId'
    | '/catalog/$catalogId/data-service/$dataServiceId'
    | '/catalog/$catalogId/dataset/$datasetId'
    | '/contract-negotiation/$cnProcess/message/$messageId'
    | '/transfer-process/$transferProcessId/transfer-message/$transferMessageId'
  id:
    | '__root__'
    | '/'
    | '/agreements'
    | '/catalog'
    | '/contract-negotiation'
    | '/participants'
    | '/subscriptions'
    | '/transfer-process'
    | '/catalog/$catalogId'
    | '/contract-negotiation/$cnProcess'
    | '/participants/$participantId'
    | '/transfer-process/$transferProcessId'
    | '/agreements/$agreementId'
    | '/agreements/'
    | '/catalog/'
    | '/contract-negotiation/'
    | '/participants/'
    | '/subscriptions/'
    | '/transfer-process/'
    | '/catalog/$catalogId/'
    | '/contract-negotiation/$cnProcess/'
    | '/participants/$participantId/'
    | '/transfer-process/$transferProcessId/'
    | '/catalog/$catalogId/data-service/$dataServiceId'
    | '/catalog/$catalogId/dataset/$datasetId'
    | '/contract-negotiation/$cnProcess/message/$messageId'
    | '/transfer-process/$transferProcessId/transfer-message/$transferMessageId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AgreementsRouteRoute: typeof AgreementsRouteRouteWithChildren
  CatalogRouteRoute: typeof CatalogRouteRouteWithChildren
  ContractNegotiationRouteRoute: typeof ContractNegotiationRouteRouteWithChildren
  ParticipantsRouteRoute: typeof ParticipantsRouteRouteWithChildren
  SubscriptionsRouteRoute: typeof SubscriptionsRouteRouteWithChildren
  TransferProcessRouteRoute: typeof TransferProcessRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AgreementsRouteRoute: AgreementsRouteRouteWithChildren,
  CatalogRouteRoute: CatalogRouteRouteWithChildren,
  ContractNegotiationRouteRoute: ContractNegotiationRouteRouteWithChildren,
  ParticipantsRouteRoute: ParticipantsRouteRouteWithChildren,
  SubscriptionsRouteRoute: SubscriptionsRouteRouteWithChildren,
  TransferProcessRouteRoute: TransferProcessRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/agreements",
        "/catalog",
        "/contract-negotiation",
        "/participants",
        "/subscriptions",
        "/transfer-process"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/agreements": {
      "filePath": "agreements/route.tsx",
      "children": [
        "/agreements/$agreementId",
        "/agreements/"
      ]
    },
    "/catalog": {
      "filePath": "catalog/route.tsx",
      "children": [
        "/catalog/$catalogId",
        "/catalog/"
      ]
    },
    "/contract-negotiation": {
      "filePath": "contract-negotiation/route.tsx",
      "children": [
        "/contract-negotiation/$cnProcess",
        "/contract-negotiation/"
      ]
    },
    "/participants": {
      "filePath": "participants/route.tsx",
      "children": [
        "/participants/$participantId",
        "/participants/"
      ]
    },
    "/subscriptions": {
      "filePath": "subscriptions/route.tsx",
      "children": [
        "/subscriptions/"
      ]
    },
    "/transfer-process": {
      "filePath": "transfer-process/route.tsx",
      "children": [
        "/transfer-process/$transferProcessId",
        "/transfer-process/"
      ]
    },
    "/catalog/$catalogId": {
      "filePath": "catalog/$catalogId/route.tsx",
      "parent": "/catalog",
      "children": [
        "/catalog/$catalogId/",
        "/catalog/$catalogId/data-service/$dataServiceId",
        "/catalog/$catalogId/dataset/$datasetId"
      ]
    },
    "/contract-negotiation/$cnProcess": {
      "filePath": "contract-negotiation/$cnProcess/route.tsx",
      "parent": "/contract-negotiation",
      "children": [
        "/contract-negotiation/$cnProcess/",
        "/contract-negotiation/$cnProcess/message/$messageId"
      ]
    },
    "/participants/$participantId": {
      "filePath": "participants/$participantId/route.tsx",
      "parent": "/participants",
      "children": [
        "/participants/$participantId/"
      ]
    },
    "/transfer-process/$transferProcessId": {
      "filePath": "transfer-process/$transferProcessId/route.tsx",
      "parent": "/transfer-process",
      "children": [
        "/transfer-process/$transferProcessId/",
        "/transfer-process/$transferProcessId/transfer-message/$transferMessageId"
      ]
    },
    "/agreements/$agreementId": {
      "filePath": "agreements/$agreementId.tsx",
      "parent": "/agreements"
    },
    "/agreements/": {
      "filePath": "agreements/index.tsx",
      "parent": "/agreements"
    },
    "/catalog/": {
      "filePath": "catalog/index.tsx",
      "parent": "/catalog"
    },
    "/contract-negotiation/": {
      "filePath": "contract-negotiation/index.tsx",
      "parent": "/contract-negotiation"
    },
    "/participants/": {
      "filePath": "participants/index.tsx",
      "parent": "/participants"
    },
    "/subscriptions/": {
      "filePath": "subscriptions/index.tsx",
      "parent": "/subscriptions"
    },
    "/transfer-process/": {
      "filePath": "transfer-process/index.tsx",
      "parent": "/transfer-process"
    },
    "/catalog/$catalogId/": {
      "filePath": "catalog/$catalogId/index.tsx",
      "parent": "/catalog/$catalogId"
    },
    "/contract-negotiation/$cnProcess/": {
      "filePath": "contract-negotiation/$cnProcess/index.tsx",
      "parent": "/contract-negotiation/$cnProcess"
    },
    "/participants/$participantId/": {
      "filePath": "participants/$participantId/index.tsx",
      "parent": "/participants/$participantId"
    },
    "/transfer-process/$transferProcessId/": {
      "filePath": "transfer-process/$transferProcessId/index.tsx",
      "parent": "/transfer-process/$transferProcessId"
    },
    "/catalog/$catalogId/data-service/$dataServiceId": {
      "filePath": "catalog/$catalogId/data-service.$dataServiceId.tsx",
      "parent": "/catalog/$catalogId"
    },
    "/catalog/$catalogId/dataset/$datasetId": {
      "filePath": "catalog/$catalogId/dataset.$datasetId.tsx",
      "parent": "/catalog/$catalogId"
    },
    "/contract-negotiation/$cnProcess/message/$messageId": {
      "filePath": "contract-negotiation/$cnProcess/message.$messageId.tsx",
      "parent": "/contract-negotiation/$cnProcess"
    },
    "/transfer-process/$transferProcessId/transfer-message/$transferMessageId": {
      "filePath": "transfer-process/$transferProcessId/transfer-message.$transferMessageId.tsx",
      "parent": "/transfer-process/$transferProcessId"
    }
  }
}
ROUTE_MANIFEST_END */
