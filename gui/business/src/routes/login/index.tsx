import { createFileRoute } from "@tanstack/react-router";
import Heading from "shared/src/components/ui/heading.tsx";
import { postLoginPoll, usePostLogin } from "shared/src/data/business-queries.ts";
import { useContext, useEffect, useState } from "react";
import { GlobalInfoContext, GlobalInfoContextType } from "shared/src/context/GlobalInfoContext.tsx";
import QRCode from "react-qr-code";
import { Button } from "shared/src/components/ui/button.tsx";
import { generateRandomString } from "shared/src/lib/utils.ts";
import { useQuery } from "@tanstack/react-query";
import { AuthContext, AuthContextType } from "shared/src/context/AuthContext.tsx";

export const Route = createFileRoute("/login/")({
  component: RouteComponent,
});

function RouteComponent() {
  const { api_gateway } = useContext<GlobalInfoContextType | null>(GlobalInfoContext)!;
  const { setAuthentication } = useContext<AuthContextType | null>(AuthContext)!;
  const { mutateAsync: loginAsync } = usePostLogin();
  const [oidcString, setOidcString] = useState("");
  const [copyStatus, setCopyStatus] = useState("");
  const [authRequestId, setAuthRequestId] = useState("");

  // Step 1: Get the initial OIDC string and authRequestId
  useEffect(() => {
    const getOidcLogin = async () => {
      const requestId = generateRandomString(12);
      setAuthRequestId(requestId);
      const oidc = await loginAsync({
        api_gateway,
        content: {
          authRequestId: requestId,
        },
      });
      setOidcString(oidc);
    };
    getOidcLogin().then(() => {});
  }, [api_gateway, loginAsync]);

  // Step 2: Use useQuery for polling
  const { data: pollData, isSuccess: pollSuccess } = useQuery({
    queryKey: ["LOGIN_POLL", authRequestId],
    queryFn: async () => {
      return await postLoginPoll({
        api_gateway,
        content: { authRequestId },
      });
    },
    // Enable the query only when authRequestId is truly available and oidcString is set
    enabled: !!authRequestId && authRequestId !== "" && oidcString !== "",
    refetchInterval: (data) => {
      // Stop polling if the login is successful
      if (data && data.state.data != undefined) {
        // Adjust "LOGIN_SUCCESS" to your actual success condition
        const data_json = JSON.parse(data.state.data);
        console.log(data_json);
        if (data_json.error == undefined) {
          setAuthentication(data_json.mate as Participant, data_json.token);
          return false; // Return `false` to stop polling
        }
      }
      return 1000; // Poll every 3 seconds
    },
    refetchIntervalInBackground: true,
    staleTime: Infinity,
    retry: false,
  });

  useEffect(() => {
    if (pollSuccess) {
      // Adjust "LOGIN_SUCCESS" to your actual condition
      console.log("Login successful! Redirecting...");
      // Handle successful login (e.g., redirect to dashboard)
      // For example: navigate('/dashboard');
    }
  }, [pollSuccess, pollData]); // Add dependencies to useEffect

  const handleCopy = async () => {
    try {
      await navigator.clipboard.writeText(oidcString);
      setCopyStatus("Copied!");
      setTimeout(() => setCopyStatus(""), 2000); // Clear message after 2 seconds
    } catch (err) {
      console.error("Failed to copy: ", err);
      setCopyStatus("Failed to copy.");
      setTimeout(() => setCopyStatus(""), 2000); // Clear message after 2 seconds
    }
  };

  return (
    <div className="h-full w-full flex">
      <div className="relative h-full w-full flex justify-center items-center">
        <div className="absolute top-6 left-6">
          {/* small logo full - sustituir por imagen*/}
          <svg
            width="151"
            height="35"
            viewBox="0 0 151 35"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M21.7848 6.87284V11.9329L19.8193 9.98121C19.6611 9.82413 19.4933 9.68133 19.3399 9.53376V7.07752C19.3399 4.65461 17.9016 3.20752 15.4662 3.20752H11.1804C8.70663 3.20752 7.26841 4.63081 7.26841 7.11561V9.46236C7.08623 9.63372 6.90406 9.81461 6.72189 10.005L4.84261 11.8853V6.92044C4.81864 4.84977 5.32202 3.29321 6.3096 2.3031C7.29717 1.31299 8.87442 0.798889 10.9838 0.798889H15.658C19.8432 0.798889 21.7848 2.72675 21.7848 6.87284Z"
              fill="#EFF5FA"
            />
            <path
              d="M24.3832 16.5456L17.6008 9.76438C16.1113 8.32157 14.6555 7.57611 13.2624 7.57611C11.8692 7.57611 10.4568 8.29271 9.02997 9.70667L8.94321 9.78843L8.895 9.8269L4.50354 14.2467L2.22345 16.536C-0.74115 19.5419 -0.74115 22.2207 2.22345 25.2265L8.90946 31.9597C10.3556 33.4458 11.8403 34.2009 13.2479 34.2009C14.6555 34.2009 16.1402 33.4458 17.6538 31.9501L24.4025 25.2169C25.8776 23.7453 26.6247 22.2832 26.6247 20.8596C26.6247 19.4361 25.8486 18.0077 24.3832 16.5456ZM22.5177 23.6346L16.0486 30.0744C15.6981 30.4707 15.2712 30.7925 14.7933 31.0206C14.3154 31.2486 13.7964 31.3783 13.2672 31.4018C12.7381 31.3775 12.2194 31.2475 11.7416 31.0195C11.2638 30.7914 10.8368 30.4701 10.4858 30.0744L4.07452 23.6346C3.68171 23.2888 3.36211 22.8682 3.13447 22.3974C2.90683 21.9267 2.77574 21.4153 2.74888 20.8933C2.7742 20.3696 2.90457 19.8563 3.13227 19.3838C3.35997 18.9113 3.68037 18.4891 4.07452 18.1423L10.4858 11.6881C10.8368 11.2925 11.2638 10.9711 11.7416 10.7431C12.2194 10.5151 12.7381 10.3851 13.2672 10.3607C13.7983 10.3853 14.3191 10.5154 14.7992 10.7433C15.2793 10.9712 15.709 11.2924 16.0631 11.6881L22.5032 18.1279C22.892 18.4752 23.2071 18.8967 23.4298 19.3676C23.6525 19.8384 23.7784 20.349 23.7999 20.8692C23.7862 21.393 23.6654 21.9085 23.4449 22.384C23.2244 22.8595 22.9089 23.2851 22.5177 23.6346Z"
              fill="#EFF5FA"
            />
            <path
              d="M16.2757 21.4834L19.8381 19.4355L18.3508 17.0687L16.6184 18.328L15.2583 19.3158C15.3741 18.9669 15.3945 18.5913 15.3172 18.2295L14.4623 14.105L11.8292 14.794L12.4844 16.873L13.113 18.896C12.791 18.5607 12.3667 18.3486 11.9122 18.2959L7.82011 17.7886L7.71134 20.5578L9.82508 20.5852L11.8259 20.6206C11.4401 20.8315 11.1364 21.1702 10.9636 21.5819L9.26465 25.407L11.8034 26.4511L12.4649 24.401L13.1281 22.4069C13.2003 22.8695 13.4256 23.2942 13.7661 23.6096L16.8113 26.4719L18.5102 24.3295L16.7961 23.0327L15.1312 21.7564C15.5322 21.7884 15.9319 21.693 16.2757 21.4834Z"
              fill="#9DD5F2"
            />
            <path
              d="M36.1699 19.6188C36.146 18.3992 36.3482 17.1858 36.7663 16.04C37.1139 15.0903 37.6517 14.2216 38.347 13.4871C38.9842 12.8214 39.7572 12.3007 40.6135 11.9602C41.4609 11.6177 42.3657 11.4395 43.2797 11.4353C45.3673 11.4353 46.9718 12.0914 48.0872 13.3917C49.2026 14.692 49.7573 16.6842 49.7573 19.3563V19.8156C49.7671 19.9904 49.7671 20.1656 49.7573 20.3405H39.0687C39.0839 21.693 39.5809 22.9957 40.4704 24.0147C41.2895 24.8458 42.5639 25.2613 44.2937 25.2613C45.1223 25.2781 45.9497 25.192 46.7571 25.0048C47.2733 24.8858 47.7782 24.7221 48.2661 24.5157L48.6538 26.8419C48.0824 27.1092 47.4819 27.3093 46.8645 27.4384C45.919 27.6497 44.9522 27.7498 43.9835 27.7366C42.7868 27.7684 41.5953 27.5658 40.4763 27.1402C39.5481 26.7685 38.7161 26.1914 38.0428 25.4522C37.394 24.7043 36.9139 23.8255 36.6351 22.8754C36.3136 21.8202 36.1567 20.7218 36.1699 19.6188ZM46.8585 18.1037C46.9262 16.995 46.5939 15.8987 45.922 15.0141C45.6018 14.6191 45.193 14.3052 44.7287 14.0979C44.2644 13.8907 43.7577 13.7958 43.2499 13.8211C42.666 13.8103 42.0877 13.9369 41.5619 14.1909C41.083 14.4144 40.6532 14.7307 40.2974 15.1214C39.9543 15.5274 39.6875 15.9922 39.5101 16.4933C39.309 17.0113 39.1728 17.5523 39.1045 18.1037H46.8585Z"
              fill="#EFF5FA"
            />
            <path
              d="M65.8822 26.7375C65.2439 26.8986 64.4029 27.0656 63.3591 27.2445C62.1599 27.4353 60.9468 27.5251 59.7326 27.5129C58.7021 27.5423 57.676 27.3659 56.7145 26.994C55.9423 26.678 55.2645 26.1686 54.7462 25.5148C54.2317 24.8484 53.8656 24.0796 53.6725 23.2602C53.4438 22.3172 53.3336 21.3494 53.3445 20.3792V11.6589H56.118V19.7828C56.118 21.6716 56.4163 23.0255 57.0127 23.8447C57.6092 24.6638 58.6152 25.0814 60.0308 25.0973C60.3291 25.0973 60.6273 25.0973 60.9554 25.0674C61.2834 25.0376 61.5518 25.0197 61.8501 24.9899L62.6135 24.9004C62.78 24.8862 62.9442 24.8522 63.1026 24.799V11.6768H65.8822V26.7375Z"
              fill="#EFF5FA"
            />
            <path
              d="M69.4609 12.4436C70.0932 12.2825 70.9402 12.1096 71.9959 11.9306C73.2012 11.7403 74.4202 11.6506 75.6403 11.6622C76.6889 11.6313 77.7332 11.8097 78.7121 12.1871C79.4713 12.4998 80.1369 13.0032 80.6446 13.6484C81.1588 14.306 81.5195 15.0702 81.7004 15.8852C81.9061 16.8375 82.0061 17.8097 81.9986 18.784V27.5162H79.2191V19.3984C79.2319 18.577 79.168 17.7563 79.0282 16.9469C78.9351 16.3543 78.7154 15.7888 78.384 15.2887C78.0877 14.871 77.6718 14.5528 77.1911 14.3761C76.5959 14.1752 75.9701 14.0803 75.3421 14.0958C75.0438 14.0958 74.7456 14.0958 74.4175 14.0958C74.0895 14.0958 73.7913 14.1375 73.505 14.1674C73.2187 14.1972 72.9562 14.233 72.7296 14.2747L72.2345 14.3642V27.4864H69.4609V12.4436Z"
              fill="#EFF5FA"
            />
            <path
              d="M90.9426 26.4879L87.0477 22.5632C85.0734 20.5531 85.1032 18.6086 87.0477 16.6284L90.9426 12.7096C92.9169 10.6995 94.927 10.7293 96.9072 12.7096L100.832 16.6284C102.776 18.5788 102.806 20.5889 100.832 22.5632L96.9072 26.4879C94.927 28.4383 92.9169 28.4682 90.9426 26.4879ZM95.1178 14.6541C94.9789 14.4689 94.7988 14.3186 94.5918 14.215C94.3847 14.1115 94.1564 14.0576 93.9249 14.0576C93.6934 14.0576 93.4651 14.1115 93.258 14.215C93.051 14.3186 92.8709 14.4689 92.732 14.6541L89.0041 18.4178C88.2048 19.217 88.2048 19.9805 89.0041 20.8036L92.732 24.5673C92.8709 24.7525 93.051 24.9028 93.258 25.0063C93.4651 25.1099 93.6934 25.1638 93.9249 25.1638C94.1564 25.1638 94.3847 25.1099 94.5918 25.0063C94.7988 24.9028 94.9789 24.7525 95.1178 24.5673L98.8875 20.8036C99.0706 20.6633 99.2189 20.4827 99.321 20.2758C99.423 20.0689 99.4761 19.8414 99.4761 19.6107C99.4761 19.38 99.423 19.1524 99.321 18.9456C99.2189 18.7387 99.0706 18.5581 98.8875 18.4178L95.1178 14.6541Z"
              fill="#EFF5FA"
            />
            <path
              d="M125.658 11.9306C124.452 11.7403 123.233 11.6506 122.013 11.6622C120.963 11.6313 119.916 11.8097 118.935 12.1871C118.196 12.4883 117.544 12.9702 117.039 13.5888C116.531 12.9709 115.877 12.4892 115.136 12.1871C114.155 11.8097 113.109 11.6313 112.058 11.6622C110.838 11.6506 109.619 11.7403 108.414 11.9306C107.358 12.1096 106.517 12.2825 105.879 12.4436V27.5162H108.652V14.394L109.148 14.3046C109.374 14.2628 109.637 14.227 109.923 14.1972C110.209 14.1674 110.519 14.1435 110.836 14.1256C111.152 14.1077 111.462 14.1256 111.76 14.1256C112.388 14.1102 113.014 14.205 113.609 14.406C114.093 14.573 114.517 14.8803 114.826 15.2887C115.14 15.7927 115.344 16.358 115.422 16.9469C115.565 17.7561 115.63 18.5768 115.619 19.3984V27.5162H118.405V19.3984C118.393 18.5768 118.459 17.7561 118.601 16.9469C118.7 16.3529 118.926 15.7872 119.264 15.2887C119.562 14.8731 119.977 14.5554 120.456 14.3761C121.052 14.1752 121.678 14.0803 122.306 14.0958C122.604 14.0958 122.902 14.0958 123.23 14.0958C123.558 14.0958 123.856 14.1375 124.143 14.1674C124.429 14.1972 124.691 14.233 124.918 14.2747L125.413 14.3642V27.4864H128.187V12.4436C127.554 12.3064 126.713 12.1096 125.658 11.9306Z"
              fill="#EFF5FA"
            />
            <path
              d="M134.539 27.3505H131.766V14.6041C131.766 13.868 132.058 13.1619 132.578 12.6408C133.098 12.1197 133.803 11.8262 134.539 11.8246V27.3505Z"
              fill="#EFF5FA"
            />
            <path
              d="M144.223 11.4677C145.182 11.4448 146.137 11.5922 147.044 11.9031C147.741 12.1421 148.367 12.5516 148.865 13.0944C149.363 13.6372 149.717 14.2959 149.895 15.0107C150.1 15.7894 150.2 16.5916 150.194 17.3966V27.1129L149.192 27.28C148.768 27.3456 148.285 27.4112 147.748 27.4708C147.211 27.5305 146.627 27.5842 146.001 27.6378C145.374 27.6915 144.748 27.7094 144.134 27.7094C143.325 27.7149 142.518 27.6248 141.73 27.441C141.045 27.2852 140.396 26.9975 139.821 26.594C139.278 26.198 138.846 25.6678 138.569 25.0551C138.252 24.33 138.099 23.5438 138.121 22.7528C138.1 21.9846 138.279 21.2242 138.64 20.5459C138.982 19.9381 139.47 19.4255 140.06 19.0547C140.702 18.657 141.408 18.3744 142.147 18.2197C142.972 18.0379 143.814 17.9479 144.659 17.9513C144.947 17.9507 145.236 17.9647 145.523 17.993C145.822 18.0228 146.12 18.0646 146.376 18.1123L147.074 18.2495C147.215 18.2718 147.354 18.3017 147.492 18.339V17.5397C147.492 17.0846 147.444 16.6308 147.349 16.1857C147.256 15.7537 147.07 15.3468 146.806 14.9928C146.532 14.6267 146.168 14.3372 145.75 14.1518C145.196 13.9243 144.6 13.8186 144.002 13.8416C143.203 13.8344 142.405 13.8983 141.617 14.0325C141.092 14.1209 140.577 14.2566 140.078 14.4381L139.714 12.1715C140.291 11.951 140.891 11.7949 141.503 11.7063C142.401 11.547 143.311 11.4671 144.223 11.4677ZM144.462 25.3832C145.118 25.3832 145.702 25.3832 146.209 25.3355C146.635 25.3166 147.057 25.2627 147.474 25.1744V20.522C147.166 20.3906 146.84 20.3042 146.508 20.2655C145.968 20.1929 145.424 20.159 144.879 20.1641C144.434 20.166 143.99 20.1959 143.549 20.2536C143.105 20.3079 142.672 20.4328 142.267 20.6234C141.889 20.8084 141.556 21.0753 141.294 21.4048C141.022 21.7797 140.885 22.2362 140.907 22.6991C140.865 23.0996 140.932 23.5039 141.101 23.8694C141.27 24.2348 141.535 24.5477 141.867 24.7748C142.66 25.2112 143.557 25.4217 144.462 25.3832Z"
              fill="#EFF5FA"
            />
          </svg>
        </div>

        {/* big logo picto - este no sustituir por li lo queremos animar en algún momento :-) */}
        <svg
          width="222"
          height="286"
          viewBox="0 0 222 286"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M182.18 53.4242V97.2491L165.687 80.3481C164.352 78.9906 162.926 77.7463 161.614 76.4792V55.189C161.614 34.2154 149.51 21.7037 129.124 21.7037H93.173C72.29 21.7037 60.3891 34.0118 60.3891 55.5057V75.8457C58.8506 77.3164 57.3347 78.8775 55.8189 80.5518L40.0265 96.8193L39.9134 53.8315C39.7097 35.8897 43.8728 22.4277 52.2441 13.8754C60.5928 5.2326 73.8285 0.843323 91.544 0.843323H130.753C165.89 0.843323 182.18 17.5407 182.18 53.4242Z"
            fill="#EEF4F8"
          />
          <path
            d="M203.516 134.264L146.908 76.1402C134.487 63.719 122.36 57.3613 110.663 57.3613C98.9653 57.3613 87.2455 63.5154 75.322 75.6198L74.598 76.3438L74.1908 76.6606L37.6285 114.535L18.5781 134.151C-6.17382 159.921 -6.17382 182.886 18.465 208.656L74.2586 266.35C86.4762 279.088 98.6938 285.559 110.504 285.559C122.314 285.559 134.736 279.088 147.27 266.259L203.471 208.656C215.802 196.031 222.001 183.519 222.001 171.302C221.91 159.197 215.689 146.776 203.471 134.264H203.516ZM187.927 194.99L133.966 250.196C126.636 257.707 118.898 261.576 110.753 261.576C102.608 261.576 94.8702 257.707 87.5396 250.196L34.0763 194.99C26.7458 187.479 22.9674 179.537 22.9674 171.505C22.9674 163.473 26.7458 155.441 34.0763 147.93L87.5396 92.634C94.8702 85.1224 102.721 81.2535 110.753 81.2535C118.785 81.2535 126.636 85.1224 134.08 92.634L187.837 147.839C194.964 155.147 198.629 163.066 198.629 171.324C198.742 179.786 195.077 187.705 187.95 195.013L187.927 194.99Z"
            fill="#EEF4F8"
          />
          <path
            d="M131.587 176.369L161.068 159.423V159.333L149.054 139.852L134.845 150.26L123.578 158.428C124.506 155.645 124.777 152.568 124.121 149.468L117.514 115.44L117.401 115.372L95.6811 121.096L100.908 138.201L105.976 154.853C103.396 152.183 100.003 150.35 96.1336 149.966L62.5579 145.871L61.1777 168.948L78.5539 169.107L95.206 169.333C92.0385 171.03 89.3687 173.722 87.8302 177.32L73.7573 208.836L94.6177 217.366L100.184 200.443L105.614 184.039C106.179 187.705 107.876 191.234 110.772 193.904L135.66 217.434L150.004 199.651L135.977 188.994L122.356 178.541C125.478 178.768 128.714 178.066 131.632 176.302L131.587 176.369Z"
            fill="#9DD5F2"
          />
        </svg>
        {/* TO DO ? logos UPM, Incibe, etc. */}
        {/* TO DO - bg-image */}
      </div>
      <div className="h-full w-full p-8 py-4">
        <div className="h-full m-auto p-6 flex flex-col gap-4 justify-center items-center text-center bg-brand-sky/[3%] rounded-md">
          <Heading level="h4" className="m-0 text-center text-brand-sky">
            Login
          </Heading>
          <div className="h-full w-fit flex flex-col gap-4 items-center">
            <p>Scan the QR code...</p>
            <div className="w-auto h-full">
              {oidcString != "" && (
                <QRCode
                  size={32}
                  value={oidcString}
                  style={{ height: "100%", maxWidth: "100%", width: "100%" }}
                  fgColor="#fff"
                  bgColor="#0a0a1b"
                />
              )}
            </div>
            <p>... or copy your URI bellow</p>
            <div className="space-y-4 [&>button]:w-32">
              <div className="max-w-full break-all p-2 bg-background-200/40 border border-stroke rounded-md break-words">
                <code className="text-xs text-foreground-200">{oidcString}</code>
              </div>
              <Button onClick={handleCopy}>{copyStatus || "Copy Text"}</Button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
