/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RequestsRouteImport } from './routes/requests/route'
import { Route as LoginRouteImport } from './routes/login/route'
import { Route as DatahubCatalogRouteImport } from './routes/datahub-catalog/route'
import { Route as DashboardRouteImport } from './routes/dashboard/route'
import { Route as IndexImport } from './routes/index'
import { Route as RequestsIndexImport } from './routes/requests/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as DatahubCatalogIndexImport } from './routes/datahub-catalog/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as DatahubCatalogCatalogIdRouteImport } from './routes/datahub-catalog/$catalogId/route'
import { Route as DatahubCatalogCatalogIdIndexImport } from './routes/datahub-catalog/$catalogId/index'
import { Route as DatahubCatalogCatalogIdDatasetDatasetIdImport } from './routes/datahub-catalog/$catalogId/dataset.$datasetId'

// Create/Update Routes

const RequestsRouteRoute = RequestsRouteImport.update({
  id: '/requests',
  path: '/requests',
  getParentRoute: () => rootRoute,
} as any)

const LoginRouteRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DatahubCatalogRouteRoute = DatahubCatalogRouteImport.update({
  id: '/datahub-catalog',
  path: '/datahub-catalog',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRouteRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RequestsIndexRoute = RequestsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => RequestsRouteRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LoginRouteRoute,
} as any)

const DatahubCatalogIndexRoute = DatahubCatalogIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DatahubCatalogRouteRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DatahubCatalogCatalogIdRouteRoute =
  DatahubCatalogCatalogIdRouteImport.update({
    id: '/$catalogId',
    path: '/$catalogId',
    getParentRoute: () => DatahubCatalogRouteRoute,
  } as any)

const DatahubCatalogCatalogIdIndexRoute =
  DatahubCatalogCatalogIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DatahubCatalogCatalogIdRouteRoute,
  } as any)

const DatahubCatalogCatalogIdDatasetDatasetIdRoute =
  DatahubCatalogCatalogIdDatasetDatasetIdImport.update({
    id: '/dataset/$datasetId',
    path: '/dataset/$datasetId',
    getParentRoute: () => DatahubCatalogCatalogIdRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/datahub-catalog': {
      id: '/datahub-catalog'
      path: '/datahub-catalog'
      fullPath: '/datahub-catalog'
      preLoaderRoute: typeof DatahubCatalogRouteImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRoute
    }
    '/requests': {
      id: '/requests'
      path: '/requests'
      fullPath: '/requests'
      preLoaderRoute: typeof RequestsRouteImport
      parentRoute: typeof rootRoute
    }
    '/datahub-catalog/$catalogId': {
      id: '/datahub-catalog/$catalogId'
      path: '/$catalogId'
      fullPath: '/datahub-catalog/$catalogId'
      preLoaderRoute: typeof DatahubCatalogCatalogIdRouteImport
      parentRoute: typeof DatahubCatalogRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/datahub-catalog/': {
      id: '/datahub-catalog/'
      path: '/'
      fullPath: '/datahub-catalog/'
      preLoaderRoute: typeof DatahubCatalogIndexImport
      parentRoute: typeof DatahubCatalogRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/'
      fullPath: '/login/'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof LoginRouteImport
    }
    '/requests/': {
      id: '/requests/'
      path: '/'
      fullPath: '/requests/'
      preLoaderRoute: typeof RequestsIndexImport
      parentRoute: typeof RequestsRouteImport
    }
    '/datahub-catalog/$catalogId/': {
      id: '/datahub-catalog/$catalogId/'
      path: '/'
      fullPath: '/datahub-catalog/$catalogId/'
      preLoaderRoute: typeof DatahubCatalogCatalogIdIndexImport
      parentRoute: typeof DatahubCatalogCatalogIdRouteImport
    }
    '/datahub-catalog/$catalogId/dataset/$datasetId': {
      id: '/datahub-catalog/$catalogId/dataset/$datasetId'
      path: '/dataset/$datasetId'
      fullPath: '/datahub-catalog/$catalogId/dataset/$datasetId'
      preLoaderRoute: typeof DatahubCatalogCatalogIdDatasetDatasetIdImport
      parentRoute: typeof DatahubCatalogCatalogIdRouteImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

interface DatahubCatalogCatalogIdRouteRouteChildren {
  DatahubCatalogCatalogIdIndexRoute: typeof DatahubCatalogCatalogIdIndexRoute
  DatahubCatalogCatalogIdDatasetDatasetIdRoute: typeof DatahubCatalogCatalogIdDatasetDatasetIdRoute
}

const DatahubCatalogCatalogIdRouteRouteChildren: DatahubCatalogCatalogIdRouteRouteChildren =
  {
    DatahubCatalogCatalogIdIndexRoute: DatahubCatalogCatalogIdIndexRoute,
    DatahubCatalogCatalogIdDatasetDatasetIdRoute:
      DatahubCatalogCatalogIdDatasetDatasetIdRoute,
  }

const DatahubCatalogCatalogIdRouteRouteWithChildren =
  DatahubCatalogCatalogIdRouteRoute._addFileChildren(
    DatahubCatalogCatalogIdRouteRouteChildren,
  )

interface DatahubCatalogRouteRouteChildren {
  DatahubCatalogCatalogIdRouteRoute: typeof DatahubCatalogCatalogIdRouteRouteWithChildren
  DatahubCatalogIndexRoute: typeof DatahubCatalogIndexRoute
}

const DatahubCatalogRouteRouteChildren: DatahubCatalogRouteRouteChildren = {
  DatahubCatalogCatalogIdRouteRoute:
    DatahubCatalogCatalogIdRouteRouteWithChildren,
  DatahubCatalogIndexRoute: DatahubCatalogIndexRoute,
}

const DatahubCatalogRouteRouteWithChildren =
  DatahubCatalogRouteRoute._addFileChildren(DatahubCatalogRouteRouteChildren)

interface LoginRouteRouteChildren {
  LoginIndexRoute: typeof LoginIndexRoute
}

const LoginRouteRouteChildren: LoginRouteRouteChildren = {
  LoginIndexRoute: LoginIndexRoute,
}

const LoginRouteRouteWithChildren = LoginRouteRoute._addFileChildren(
  LoginRouteRouteChildren,
)

interface RequestsRouteRouteChildren {
  RequestsIndexRoute: typeof RequestsIndexRoute
}

const RequestsRouteRouteChildren: RequestsRouteRouteChildren = {
  RequestsIndexRoute: RequestsIndexRoute,
}

const RequestsRouteRouteWithChildren = RequestsRouteRoute._addFileChildren(
  RequestsRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/datahub-catalog': typeof DatahubCatalogRouteRouteWithChildren
  '/login': typeof LoginRouteRouteWithChildren
  '/requests': typeof RequestsRouteRouteWithChildren
  '/datahub-catalog/$catalogId': typeof DatahubCatalogCatalogIdRouteRouteWithChildren
  '/dashboard/': typeof DashboardIndexRoute
  '/datahub-catalog/': typeof DatahubCatalogIndexRoute
  '/login/': typeof LoginIndexRoute
  '/requests/': typeof RequestsIndexRoute
  '/datahub-catalog/$catalogId/': typeof DatahubCatalogCatalogIdIndexRoute
  '/datahub-catalog/$catalogId/dataset/$datasetId': typeof DatahubCatalogCatalogIdDatasetDatasetIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/datahub-catalog': typeof DatahubCatalogIndexRoute
  '/login': typeof LoginIndexRoute
  '/requests': typeof RequestsIndexRoute
  '/datahub-catalog/$catalogId': typeof DatahubCatalogCatalogIdIndexRoute
  '/datahub-catalog/$catalogId/dataset/$datasetId': typeof DatahubCatalogCatalogIdDatasetDatasetIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/datahub-catalog': typeof DatahubCatalogRouteRouteWithChildren
  '/login': typeof LoginRouteRouteWithChildren
  '/requests': typeof RequestsRouteRouteWithChildren
  '/datahub-catalog/$catalogId': typeof DatahubCatalogCatalogIdRouteRouteWithChildren
  '/dashboard/': typeof DashboardIndexRoute
  '/datahub-catalog/': typeof DatahubCatalogIndexRoute
  '/login/': typeof LoginIndexRoute
  '/requests/': typeof RequestsIndexRoute
  '/datahub-catalog/$catalogId/': typeof DatahubCatalogCatalogIdIndexRoute
  '/datahub-catalog/$catalogId/dataset/$datasetId': typeof DatahubCatalogCatalogIdDatasetDatasetIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/datahub-catalog'
    | '/login'
    | '/requests'
    | '/datahub-catalog/$catalogId'
    | '/dashboard/'
    | '/datahub-catalog/'
    | '/login/'
    | '/requests/'
    | '/datahub-catalog/$catalogId/'
    | '/datahub-catalog/$catalogId/dataset/$datasetId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/datahub-catalog'
    | '/login'
    | '/requests'
    | '/datahub-catalog/$catalogId'
    | '/datahub-catalog/$catalogId/dataset/$datasetId'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/datahub-catalog'
    | '/login'
    | '/requests'
    | '/datahub-catalog/$catalogId'
    | '/dashboard/'
    | '/datahub-catalog/'
    | '/login/'
    | '/requests/'
    | '/datahub-catalog/$catalogId/'
    | '/datahub-catalog/$catalogId/dataset/$datasetId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  DatahubCatalogRouteRoute: typeof DatahubCatalogRouteRouteWithChildren
  LoginRouteRoute: typeof LoginRouteRouteWithChildren
  RequestsRouteRoute: typeof RequestsRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  DatahubCatalogRouteRoute: DatahubCatalogRouteRouteWithChildren,
  LoginRouteRoute: LoginRouteRouteWithChildren,
  RequestsRouteRoute: RequestsRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/datahub-catalog",
        "/login",
        "/requests"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard/route.tsx",
      "children": [
        "/dashboard/"
      ]
    },
    "/datahub-catalog": {
      "filePath": "datahub-catalog/route.tsx",
      "children": [
        "/datahub-catalog/$catalogId",
        "/datahub-catalog/"
      ]
    },
    "/login": {
      "filePath": "login/route.tsx",
      "children": [
        "/login/"
      ]
    },
    "/requests": {
      "filePath": "requests/route.tsx",
      "children": [
        "/requests/"
      ]
    },
    "/datahub-catalog/$catalogId": {
      "filePath": "datahub-catalog/$catalogId/route.tsx",
      "parent": "/datahub-catalog",
      "children": [
        "/datahub-catalog/$catalogId/",
        "/datahub-catalog/$catalogId/dataset/$datasetId"
      ]
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/datahub-catalog/": {
      "filePath": "datahub-catalog/index.tsx",
      "parent": "/datahub-catalog"
    },
    "/login/": {
      "filePath": "login/index.tsx",
      "parent": "/login"
    },
    "/requests/": {
      "filePath": "requests/index.tsx",
      "parent": "/requests"
    },
    "/datahub-catalog/$catalogId/": {
      "filePath": "datahub-catalog/$catalogId/index.tsx",
      "parent": "/datahub-catalog/$catalogId"
    },
    "/datahub-catalog/$catalogId/dataset/$datasetId": {
      "filePath": "datahub-catalog/$catalogId/dataset.$datasetId.tsx",
      "parent": "/datahub-catalog/$catalogId"
    }
  }
}
ROUTE_MANIFEST_END */
