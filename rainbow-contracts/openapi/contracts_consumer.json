{
  "openapi": "3.1.0",
  "info": {
    "title": "Contract Negotiation Protocol API - Rainbow Consumer",
    "description": "This API provides endpoints for a consumer to manage the entire lifecycle of a contract negotiation process. It includes operations for initiating negotiations, handling messages and offers, managing agreements, and discovering data space participants. The API also exposes RPC endpoints for key negotiation actions and protocol message handling.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.rainbow-consumer.com",
      "description": "Production Server"
    },
    {
      "url": "http://127.0.0.1:1235",
      "description": "Local Testing Server"
    }
  ],
  "tags": [
    {
      "name": "Negotiation Processes",
      "description": "Manage the lifecycle of contract negotiation processes."
    },
    {
      "name": "Messages",
      "description": "Retrieve messages within a negotiation process."
    },
    {
      "name": "Offers",
      "description": "Manage contract offers."
    },
    {
      "name": "Agreements",
      "description": "Manage finalized contract agreements."
    },
    {
      "name": "Participants",
      "description": "Manage registered participants in the data space."
    },
    {
      "name": "RPC",
      "description": "Endpoints for remote lifecycle control of a contract negotiation (Remote Procedure Call)."
    },
    {
      "name": "Protocol",
      "description": "Endpoints for receiving asynchronous protocol messages from a provider."
    }
  ],
  "paths": {
    "/api/v1/contract-negotiation/processes": {
      "get": {
        "tags": [
          "Negotiation Processes"
        ],
        "summary": "List all contract negotiation processes",
        "operationId": "getNegotiationProcesses",
        "description": "Retrieves a list of all contract negotiation processes initiated or handled by the consumer.",
        "responses": {
          "200": {
            "description": "A list of contract negotiation processes.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RainbowCNProcess"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractNegotiationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contract-negotiation/processes/{processId}": {
      "parameters": [
        {
          "name": "processId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the contract negotiation process.",
          "schema": {
            "type": "string",
            "format": "uri"
          }
        }
      ],
      "get": {
        "tags": [
          "Negotiation Processes"
        ],
        "summary": "Get a negotiation process by ID",
        "operationId": "getNegotiationProcessById",
        "description": "Retrieves a single contract negotiation process by its unique ID.",
        "responses": {
          "200": {
            "description": "Details of the contract negotiation process.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RainbowCNProcess"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The provided process ID has an invalid format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractNegotiationError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The process with the specified ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractNegotiationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractNegotiationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contract-negotiation/processes/{processId}/messages": {
      "parameters": [
        {
          "name": "processId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the contract negotiation process.",
          "schema": {
            "type": "string",
            "format": "uri"
          }
        }
      ],
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Get all messages for a process",
        "operationId": "getMessagesByProcessId",
        "description": "Retrieves all messages associated with a specific contract negotiation process.",
        "responses": {
          "200": {
            "description": "A list of messages for the given process.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RainbowCNMessage"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The provided process ID has an invalid format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractNegotiationError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The process with the specified ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractNegotiationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractNegotiationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contract-negotiation/messages/{messageId}": {
      "parameters": [
        {
          "name": "messageId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the message.",
          "schema": {
            "type": "string",
            "format": "uri"
          }
        }
      ],
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Get a message by ID",
        "operationId": "getMessageById",
        "description": "Retrieves a single negotiation message by its unique ID.",
        "responses": {
          "200": {
            "description": "Details of the negotiation message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RainbowCNMessage"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The provided message ID has an invalid format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractNegotiationError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The message with the specified ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractNegotiationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractNegotiationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contract-negotiation/processes/{processId}/offers": {
      "parameters": [
        {
          "name": "processId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the contract negotiation process.",
          "schema": {
            "type": "string",
            "format": "uri"
          }
        }
      ],
      "get": {
        "tags": [
          "Offers"
        ],
        "summary": "Get all offers for a process",
        "operationId": "getOffersByProcessId",
        "description": "Retrieves all offers made within a specific contract negotiation process.",
        "responses": {
          "200": {
            "description": "A list of offers for the given process.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RainbowCNOffer"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The provided process ID has an invalid format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractNegotiationError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The process with the specified ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractNegotiationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractNegotiationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contract-negotiation/offers/{offerId}": {
      "parameters": [
        {
          "name": "offerId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the offer.",
          "schema": {
            "type": "string",
            "format": "uri"
          }
        }
      ],
      "get": {
        "tags": [
          "Offers"
        ],
        "summary": "Get an offer by ID",
        "operationId": "getOfferById",
        "description": "Retrieves a single offer by its unique ID.",
        "responses": {
          "200": {
            "description": "Details of the offer.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RainbowCNOffer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The provided offer ID has an invalid format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractNegotiationError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The offer with the specified ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractNegotiationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractNegotiationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contract-negotiation/agreements": {
      "get": {
        "tags": [
          "Agreements"
        ],
        "summary": "List all agreements",
        "operationId": "getAllAgreements",
        "description": "Retrieves a list of all finalized contract agreements.",
        "responses": {
          "200": {
            "description": "A list of all agreements.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RainbowAgreement"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractNegotiationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contract-negotiation/agreements/{agreementId}": {
      "parameters": [
        {
          "name": "agreementId",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the agreement.",
          "schema": {
            "type": "string",
            "format": "uri"
          }
        }
      ],
      "get": {
        "tags": [
          "Agreements"
        ],
        "summary": "Get an agreement by ID",
        "operationId": "getAgreementById",
        "description": "Retrieves a single contract agreement by its unique ID.",
        "responses": {
          "200": {
            "description": "Details of the agreement.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RainbowAgreement"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The provided agreement ID has an invalid format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractNegotiationError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The agreement with the specified ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractNegotiationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractNegotiationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/participants": {
      "get": {
        "tags": [
          "Participants"
        ],
        "summary": "List all participants",
        "operationId": "getAllParticipants",
        "description": "Retrieves a list of all registered participants in the data space.",
        "responses": {
          "200": {
            "description": "A list of participants.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RainbowParticipant"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractNegotiationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/negotiations/rpc/setup-request": {
      "post": {
        "tags": [
          "RPC"
        ],
        "summary": "Send a contract request",
        "operationId": "rpcSetupRequest",
        "description": "Creates and sends a contract request message to a provider to initiate a negotiation process.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Request sent and acknowledged by the provider.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupRequestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request body is malformed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSRPCCNConsumerErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSRPCCNConsumerErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable: The provider is not reachable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSRPCCNConsumerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/negotiations/rpc/setup-acceptance": {
      "post": {
        "tags": [
          "RPC"
        ],
        "summary": "Accept a contract offer",
        "operationId": "rpcSetupAcceptance",
        "description": "Sends a message to the provider to accept a received contract offer.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetupAcceptanceRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Acceptance message sent and acknowledged by the provider.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupAcceptanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request body is malformed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSRPCCNConsumerErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSRPCCNConsumerErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable: The provider is not reachable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSRPCCNConsumerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/negotiations/rpc/setup-verification": {
      "post": {
        "tags": [
          "RPC"
        ],
        "summary": "Verify a contract agreement",
        "operationId": "rpcSetupVerification",
        "description": "Sends a verification message to the provider after receiving a contract agreement.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetupVerificationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Verification message sent and acknowledged by the provider.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupVerificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request body is malformed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSRPCCNConsumerErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSRPCCNConsumerErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable: The provider is not reachable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSRPCCNConsumerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/negotiations/protocol/offer": {
      "post": {
        "tags": [
          "Protocol"
        ],
        "summary": "Receive a contract offer",
        "operationId": "protocolReceiveOffer",
        "description": "Callback endpoint for receiving an asynchronous `ContractOfferMessage` from a provider.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractOfferMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Offer received and processed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractAckMessage"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Malformed message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractErrorMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/negotiations/protocol/agreement": {
      "post": {
        "tags": [
          "Protocol"
        ],
        "summary": "Receive a contract agreement",
        "operationId": "protocolReceiveAgreement",
        "description": "Callback endpoint for receiving an asynchronous `ContractAgreementMessage` from a provider.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractAgreementMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Agreement received and processed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractAckMessage"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Malformed message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractErrorMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/negotiations/protocol/finalization": {
      "post": {
        "tags": [
          "Protocol"
        ],
        "summary": "Receive a negotiation finalization",
        "operationId": "protocolReceiveFinalization",
        "description": "Callback endpoint for receiving an asynchronous finalization message (`ContractNegotiationEventMessage`) from a provider.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractNegotiationEventMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Finalization message received and processed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractAckMessage"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Malformed message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractErrorMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/negotiations/protocol/termination": {
      "post": {
        "tags": [
          "Protocol"
        ],
        "summary": "Receive a negotiation termination",
        "operationId": "protocolReceiveTermination",
        "description": "Callback endpoint for receiving an asynchronous `ContractNegotiationTerminationMessage` from a provider.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractNegotiationTerminationMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Termination message received and processed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractAckMessage"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Malformed message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractErrorMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractErrorMessage"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ContractNegotiationError": {
        "type": "object",
        "description": "Standard error response for the Contract Negotiation API.",
        "properties": {
          "code": {
            "type": "string",
            "description": "HTTP status code.",
            "example": "404"
          },
          "title": {
            "type": "string",
            "description": "A short, machine-readable error code.",
            "example": "PROCESS_NOT_FOUND"
          },
          "message": {
            "type": "string",
            "description": "A human-readable explanation of the error.",
            "example": "Contract negotiation process with the specified ID was not found."
          }
        }
      },
      "RainbowCNProcess": {
        "type": "object",
        "description": "Represents the state of a contract negotiation process.",
        "properties": {
          "cnProcessId": {
            "type": "string",
            "format": "uri"
          },
          "providerPid": {
            "type": "string",
            "format": "uri"
          },
          "consumerPid": {
            "type": "string",
            "format": "uri"
          },
          "state": {
            "type": "string",
            "enum": [
              "REQUESTED",
              "OFFERED",
              "ACCEPTED",
              "AGREED",
              "VERIFIED",
              "FINALIZED",
              "TERMINATED"
            ]
          },
          "initiatedBy": {
            "type": "string",
            "enum": [
              "Consumer",
              "Provider"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NewContractNegotiationRequest": {
        "type": "object",
        "description": "Request to create a new contract negotiation process.",
        "properties": {
          "providerPid": {
            "type": "string",
            "format": "uri"
          },
          "consumerPid": {
            "type": "string",
            "format": "uri"
          },
          "state": {
            "type": "string",
            "enum": [
              "REQUESTED"
            ],
            "default": "REQUESTED"
          }
        }
      },
      "EditContractNegotiationRequest": {
        "type": "object",
        "description": "Request to edit a contract negotiation process.",
        "properties": {
          "providerPid": {
            "type": "string",
            "format": "uri"
          },
          "consumerPid": {
            "type": "string",
            "format": "uri"
          },
          "state": {
            "type": "string",
            "enum": [
              "REQUESTED",
              "OFFERED",
              "ACCEPTED",
              "AGREED",
              "VERIFIED",
              "FINALIZED",
              "TERMINATED"
            ]
          }
        }
      },
      "RainbowCNMessage": {
        "type": "object",
        "description": "Represents a message within a contract negotiation process.",
        "properties": {
          "cnMessageId": {
            "type": "string",
            "format": "uri"
          },
          "cnProcessId": {
            "type": "string",
            "format": "uri"
          },
          "@type": {
            "type": "string",
            "enum": [
              "ContractRequestMessage",
              "ContractOfferMessage",
              "ContractAgreementMessage",
              "ContractAgreementVerificationMessage",
              "ContractNegotiationEventMessage",
              "ContractNegotiationTerminationMessage"
            ]
          },
          "from": {
            "type": "string",
            "enum": [
              "Consumer",
              "Provider"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "Consumer",
              "Provider"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "content": {
            "type": "object"
          }
        }
      },
      "RainbowCNOffer": {
        "type": "object",
        "description": "Represents a contract offer within a negotiation process.",
        "properties": {
          "cnOfferId": {
            "type": "string",
            "format": "uri"
          },
          "cnMessageId": {
            "type": "string",
            "format": "uri"
          },
          "offer": {
            "type": "object"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RainbowAgreement": {
        "type": "object",
        "description": "Represents a finalized contract agreement.",
        "properties": {
          "agreementId": {
            "type": "string",
            "format": "uri"
          },
          "cnMessageId": {
            "type": "string",
            "format": "uri"
          },
          "agreement": {
            "type": "object"
          },
          "active": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RainbowParticipant": {
        "type": "object",
        "description": "Represents a participant in the data space.",
        "properties": {
          "participantId": {
            "type": "string",
            "format": "uri"
          },
          "participantType": {
            "type": "string",
            "enum": [
              "Consumer",
              "Provider"
            ]
          },
          "baseUrl": {
            "type": "string",
            "format": "uri"
          },
          "extra_fields": {
            "type": "object"
          }
        }
      },
      "NewParticipantRequest": {
        "type": "object",
        "properties": {
          "participantId": {
            "type": "string",
            "format": "uri"
          },
          "participantType": {
            "type": "string",
            "enum": [
              "Consumer",
              "Provider"
            ]
          },
          "baseUrl": {
            "type": "string",
            "format": "uri"
          },
          "extra_fields": {
            "type": "object"
          }
        },
        "required": [
          "baseUrl",
          "extra_fields"
        ]
      },
      "EditParticipantRequest": {
        "type": "object",
        "properties": {
          "baseUrl": {
            "type": "string",
            "format": "uri"
          },
          "extra_fields": {
            "type": "object"
          }
        }
      },
      "SetupRequest": {
        "type": "object",
        "properties": {
          "providerParticipantId": {
            "type": "string",
            "format": "uri"
          },
          "offer": {
            "$ref": "#/components/schemas/OdrlOffer"
          }
        },
        "required": [
          "providerParticipantId",
          "offer"
        ]
      },
      "SetupRequestResponse": {
        "type": "object",
        "properties": {
          "consumerPid": {
            "type": "string",
            "format": "uri"
          },
          "providerPid": {
            "type": "string",
            "format": "uri"
          },
          "message": {
            "$ref": "#/components/schemas/ContractAckMessage"
          }
        }
      },
      "SetupAcceptanceRequest": {
        "type": "object",
        "properties": {
          "providerParticipantId": {
            "type": "string",
            "format": "uri"
          },
          "consumerPid": {
            "type": "string",
            "format": "uri"
          },
          "providerPid": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "providerParticipantId",
          "consumerPid",
          "providerPid"
        ]
      },
      "SetupAcceptanceResponse": {
        "type": "object",
        "properties": {
          "consumerPid": {
            "type": "string",
            "format": "uri"
          },
          "providerPid": {
            "type": "string",
            "format": "uri"
          },
          "message": {
            "$ref": "#/components/schemas/ContractAckMessage"
          }
        }
      },
      "SetupVerificationRequest": {
        "type": "object",
        "properties": {
          "providerParticipantId": {
            "type": "string",
            "format": "uri"
          },
          "consumerPid": {
            "type": "string",
            "format": "uri"
          },
          "providerPid": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "providerParticipantId",
          "consumerPid",
          "providerPid"
        ]
      },
      "SetupVerificationResponse": {
        "type": "object",
        "properties": {
          "consumerPid": {
            "type": "string",
            "format": "uri"
          },
          "providerPid": {
            "type": "string",
            "format": "uri"
          },
          "message": {
            "$ref": "#/components/schemas/ContractAckMessage"
          }
        }
      },
      "SetupTerminationRequest": {
        "type": "object",
        "properties": {
          "providerParticipantId": {
            "type": "string",
            "format": "uri"
          },
          "consumerPid": {
            "type": "string",
            "format": "uri"
          },
          "providerPid": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "providerParticipantId",
          "consumerPid",
          "providerPid"
        ]
      },
      "SetupTerminationResponse": {
        "type": "object",
        "properties": {
          "consumerPid": {
            "type": "string",
            "format": "uri"
          },
          "providerPid": {
            "type": "string",
            "format": "uri"
          },
          "message": {
            "$ref": "#/components/schemas/ContractAckMessage"
          }
        }
      },
      "DSRPCCNConsumerErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ContractNegotiationError"
          }
        }
      },
      "OdrlOffer": {
        "type": "object"
      },
      "OdrlAgreement": {
        "type": "object"
      },
      "ContractAckMessage": {
        "type": "object"
      },
      "ContractOfferMessage": {
        "type": "object"
      },
      "ContractAgreementMessage": {
        "type": "object"
      },
      "ContractNegotiationEventMessage": {
        "type": "object"
      },
      "ContractNegotiationTerminationMessage": {
        "type": "object"
      },
      "ContractErrorMessage": {
        "type": "object"
      }
    }
  }
}
