openapi: 3.0.3
info:
  title: Rainbow DCAT3 Catalog API
  description: Rainbow DCAT3 Catalog API
  version: 0.1.0
servers:
  - url: http://localhost:1234/api/v1
    description: Servidor de producción
paths:
  /catalogs:
    get:
      summary: Retrieves DCAT3 Catalogs
      operationId: handle_get_catalogs
      tags:
        - Catalog
      security:
        - BearerAuth: [ ]  # Autenticación JWT
      responses:
        "200":
          description: DCAT3 Catalogs Array
          headers:
            X-Total-Count:
              description: Total count of catalogs
              schema:
                type: integer
            X-Current-Count:
              description: Total count of catalogs
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Catalog"
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Creates a new DCAT3 Catalog
      operationId: handle_post_catalog
      tags:
        - Catalog
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Catalog"
      responses:
        "201":
          description: Catalog created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Catalog"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /catalogs/{id}:
    get:
      summary: Retrieves a DCAT3 Catalog by ID
      operationId: handle_get_catalog_by_id
      tags:
        - Catalog
      security:
        - BearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          description: Urn of the catalog to retrieve as urn::uuid::<id>
          schema:
            type: string
      responses:
        "200":
          description: DCAT3 Catalog
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Catalog"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Updates a DCAT3 Catalog by ID
      operationId: handle_put_catalog
      tags:
        - Catalog
      security:
        - BearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          description: Urn of the catalog to retrieve as urn::uuid::<id>
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Catalog"
      responses:
        "200":
          description: Catalog updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Catalog"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Deletes a DCAT3 Catalog by ID
      operationId: handle_delete_catalog
      tags:
        - Catalog
      security:
        - BearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          description: Urn of the catalog to retrieve as urn::uuid::<id>
          schema:
            type: string
      responses:
        "204":
          description: Catalog deleted
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Catalog:
      type: object
      properties:
        "@context":
          type: string
          description: JSON-LD context.
          example: "https://w3id.org/dspace/2024/1/context.json"
        "@type":
          type: string
          description: The DCAT object type.
          example: "dcat:Catalog"
        "@id":
          type: string
          description: The unique identifier for the catalog as urn:uuid::<uuid>.
          example: "urn:uuid:a3f3d488-5bf4-4871-81a4-a32c170dcbc7"
        "foaf:homepage":
          type: string
          description: The homepage URL.
          example: "https://www.example.com/catalog"
        "dcat:theme":
          type: array
          description: The catalog theme.
          items:
            type: string
        "dcat:keyword":
          type: array
          description: A keyword for the catalog.
          items:
            type: string
        "dct:conformsTo":
          type: string
          description: Information about the standards the catalog conforms to.
        "dct:creator":
          type: string
          description: The creator of the catalog.
        "dct:identifier":
          type: string
          description: The catalog identifier.
          example: "urn:uuid:a3f3d488-5bf4-4871-81a4-a32c170dcbc7"
        "dct:issued":
          type: string
          format: date-time
          description: The issuance date.
          example: "2025-01-27T09:28:50.507815"
        "dct:modified":
          type: string
          description: The last modification date.
        "dct:title":
          type: string
          description: The title of the catalog.
        "dct:description":
          type: array
          description: A list of descriptions.
          items:
            type: string
        "dspace:participantId":
          type: string
          description: The participant identifier.
        "odrl:hasPolicy":
          type: array
          description: A list of policies.
          items:
            type: string
        "dspace:extraFields":
          type: object
          description: Additional fields for the catalog.
        "dcat:dataset":
          type: array
          description: An array of dataset objects.
          items:
            type: string
        "dcat:service":
          type: array
          description: An array of data service objects.
          items:
            type: string

    NewCatalog:
      type: object
      description: New schema
      properties:
        "@id":
          type: string
          nullable: true
          description: The unique identifier for the catalog as urn:uuid::<uuid>.
          example: "urn:uuid:a3f3d488-5bf4-4871-81a4-a32c170dcbc7"
        "foaf:homepage":
          type: string
          nullable: true
          description: The homepage URL.
          example: "https://www.example.com/catalog"
        "dct:conformsTo":
          type: string
          nullable: true
          description: Information about the standards the catalog conforms to.
        "dct:creator":
          type: string
          nullable: true
          description: The creator of the catalog.
        "dct:title":
          type: string
          nullable: true
          description: The title of the catalog.c

    Error:
      type: object
      properties:
        code:
          type: string
        title:
          type: string
        message:
          type: string

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
